schema {
  query: Query
  mutation: Mutation
}

 type Query {
  version: String
  statusList: [Status]
  statusById(id: String): Status
}

type Mutation {
  statusCreate(status: CreateStatusInput): Status
  statusUpdate(id: String, status: UpdateStatusInput): Status
  statusDelete(id: String!):String
}

type Status {
    id: String
    createdAt: String 
    updatedAt: String 
    userId: String
    statusType: String
    allDay: Boolean
    startsAt: AWSDateTime
    endsAt: AWSDateTime
    message: String
}


type User { 
 id: String
 firstName: String
 lastName: String
 email: String
 nickname: String
 phone: String
 status: UserStatus
}

enum UserStatus {
  CREATED
  ACTIVE
}

input CreateStatusInput {
    statusType: String
    allDay: Boolean
    startsAt: AWSDateTime
    endsAt: AWSDateTime
    message: String
}


input UpdateStatusInput {
  statusType: String
    allDay: Boolean
    startsAt: AWSDateTime
    endsAt: AWSDateTime
    message: String
}

input UserInput { 
 id: String
 firstName: String
 lastName: String
 email: String
 nickname: String
 phone: String
}



enum StatusType {
    OUT_OF_OFFICE,
    REMOTE,
    SICK,
    VACATION,
    BUSINESS_TRIP
}