"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cron = void 0;
const cdk = __importStar(require("@aws-cdk/core"));
const events = __importStar(require("@aws-cdk/aws-events"));
const eventsTargets = __importStar(require("@aws-cdk/aws-events-targets"));
const Function_1 = require("./Function");
class Cron extends cdk.Construct {
    constructor(scope, id, props) {
        super(scope, id);
        const { 
        // Topic props
        schedule, eventsRule, 
        // Function props
        job, } = props;
        // Validate input
        if (eventsRule !== undefined && schedule !== undefined) {
            throw new Error(`Cannot define both schedule and eventsRule`);
        }
        ///////////////////////////
        // Create Rule
        ///////////////////////////
        if (!eventsRule) {
            if (!schedule) {
                throw new Error(`No schedule defined for the "${id}" Cron`);
            }
            // Configure Schedule
            let propSchedule;
            if (typeof schedule === "string" &&
                (schedule.startsWith("rate(") || schedule.startsWith("cron("))) {
                propSchedule = events.Schedule.expression(schedule);
            }
            else if (schedule instanceof cdk.Duration) {
                propSchedule = events.Schedule.rate(schedule);
            }
            else {
                propSchedule = events.Schedule.cron(schedule);
            }
            this.eventsRule = new events.Rule(this, "Rule", {
                schedule: propSchedule,
            });
        }
        else {
            this.eventsRule = eventsRule;
        }
        ///////////////////////////
        // Create Targets
        ///////////////////////////
        if (!job) {
            throw new Error(`No job defined for the "${id}" Cron`);
        }
        this.jobFunction = Function_1.Function.fromDefinition(this, "Job", job);
        this.eventsRule.addTarget(new eventsTargets.LambdaFunction(this.jobFunction));
    }
    attachPermissions(permissions) {
        this.jobFunction.attachPermissions(permissions);
    }
}
exports.Cron = Cron;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3Jvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Dcm9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBcUM7QUFDckMsNERBQThDO0FBQzlDLDJFQUE2RDtBQUM3RCx5Q0FBa0U7QUFTbEUsTUFBYSxJQUFLLFNBQVEsR0FBRyxDQUFDLFNBQVM7SUFJckMsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUFnQjtRQUM1RCxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRWpCLE1BQU07UUFDSixjQUFjO1FBQ2QsUUFBUSxFQUNSLFVBQVU7UUFDVixpQkFBaUI7UUFDakIsR0FBRyxHQUNKLEdBQUcsS0FBSyxDQUFDO1FBRVYsaUJBQWlCO1FBQ2pCLElBQUksVUFBVSxLQUFLLFNBQVMsSUFBSSxRQUFRLEtBQUssU0FBUyxFQUFFO1lBQ3RELE1BQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztTQUMvRDtRQUVELDJCQUEyQjtRQUMzQixjQUFjO1FBQ2QsMkJBQTJCO1FBRTNCLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDZixJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUNiLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDN0Q7WUFFRCxxQkFBcUI7WUFDckIsSUFBSSxZQUE2QixDQUFDO1lBQ2xDLElBQ0UsT0FBTyxRQUFRLEtBQUssUUFBUTtnQkFDNUIsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsRUFDOUQ7Z0JBQ0EsWUFBWSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3JEO2lCQUFNLElBQUksUUFBUSxZQUFZLEdBQUcsQ0FBQyxRQUFRLEVBQUU7Z0JBQzNDLFlBQVksR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUMvQztpQkFBTTtnQkFDTCxZQUFZLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBOEIsQ0FBQyxDQUFDO2FBQ3JFO1lBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRTtnQkFDOUMsUUFBUSxFQUFFLFlBQVk7YUFDdkIsQ0FBQyxDQUFDO1NBQ0o7YUFBTTtZQUNMLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1NBQzlCO1FBRUQsMkJBQTJCO1FBQzNCLGlCQUFpQjtRQUNqQiwyQkFBMkI7UUFFM0IsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQTJCLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEQ7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLG1CQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQ3ZCLElBQUksYUFBYSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQ25ELENBQUM7SUFDSixDQUFDO0lBRUQsaUJBQWlCLENBQUMsV0FBd0I7UUFDeEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNsRCxDQUFDO0NBQ0Y7QUFqRUQsb0JBaUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2RrIGZyb20gXCJAYXdzLWNkay9jb3JlXCI7XG5pbXBvcnQgKiBhcyBldmVudHMgZnJvbSBcIkBhd3MtY2RrL2F3cy1ldmVudHNcIjtcbmltcG9ydCAqIGFzIGV2ZW50c1RhcmdldHMgZnJvbSBcIkBhd3MtY2RrL2F3cy1ldmVudHMtdGFyZ2V0c1wiO1xuaW1wb3J0IHsgRnVuY3Rpb24gYXMgRnVuYywgRnVuY3Rpb25EZWZpbml0aW9uIH0gZnJvbSBcIi4vRnVuY3Rpb25cIjtcbmltcG9ydCB7IFBlcm1pc3Npb25zIH0gZnJvbSBcIi4vdXRpbC9wZXJtaXNzaW9uXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ3JvblByb3BzIHtcbiAgcmVhZG9ubHkgam9iOiBGdW5jdGlvbkRlZmluaXRpb247XG4gIHJlYWRvbmx5IHNjaGVkdWxlPzogc3RyaW5nIHwgY2RrLkR1cmF0aW9uIHwgZXZlbnRzLkNyb25PcHRpb25zO1xuICByZWFkb25seSBldmVudHNSdWxlPzogZXZlbnRzLlJ1bGU7XG59XG5cbmV4cG9ydCBjbGFzcyBDcm9uIGV4dGVuZHMgY2RrLkNvbnN0cnVjdCB7XG4gIHB1YmxpYyByZWFkb25seSBldmVudHNSdWxlOiBldmVudHMuUnVsZTtcbiAgcHVibGljIHJlYWRvbmx5IGpvYkZ1bmN0aW9uOiBGdW5jO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBjZGsuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQ3JvblByb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkKTtcblxuICAgIGNvbnN0IHtcbiAgICAgIC8vIFRvcGljIHByb3BzXG4gICAgICBzY2hlZHVsZSxcbiAgICAgIGV2ZW50c1J1bGUsXG4gICAgICAvLyBGdW5jdGlvbiBwcm9wc1xuICAgICAgam9iLFxuICAgIH0gPSBwcm9wcztcblxuICAgIC8vIFZhbGlkYXRlIGlucHV0XG4gICAgaWYgKGV2ZW50c1J1bGUgIT09IHVuZGVmaW5lZCAmJiBzY2hlZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBkZWZpbmUgYm90aCBzY2hlZHVsZSBhbmQgZXZlbnRzUnVsZWApO1xuICAgIH1cblxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIENyZWF0ZSBSdWxlXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgICBpZiAoIWV2ZW50c1J1bGUpIHtcbiAgICAgIGlmICghc2NoZWR1bGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBzY2hlZHVsZSBkZWZpbmVkIGZvciB0aGUgXCIke2lkfVwiIENyb25gKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ29uZmlndXJlIFNjaGVkdWxlXG4gICAgICBsZXQgcHJvcFNjaGVkdWxlOiBldmVudHMuU2NoZWR1bGU7XG4gICAgICBpZiAoXG4gICAgICAgIHR5cGVvZiBzY2hlZHVsZSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAoc2NoZWR1bGUuc3RhcnRzV2l0aChcInJhdGUoXCIpIHx8IHNjaGVkdWxlLnN0YXJ0c1dpdGgoXCJjcm9uKFwiKSlcbiAgICAgICkge1xuICAgICAgICBwcm9wU2NoZWR1bGUgPSBldmVudHMuU2NoZWR1bGUuZXhwcmVzc2lvbihzY2hlZHVsZSk7XG4gICAgICB9IGVsc2UgaWYgKHNjaGVkdWxlIGluc3RhbmNlb2YgY2RrLkR1cmF0aW9uKSB7XG4gICAgICAgIHByb3BTY2hlZHVsZSA9IGV2ZW50cy5TY2hlZHVsZS5yYXRlKHNjaGVkdWxlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb3BTY2hlZHVsZSA9IGV2ZW50cy5TY2hlZHVsZS5jcm9uKHNjaGVkdWxlIGFzIGV2ZW50cy5Dcm9uT3B0aW9ucyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZXZlbnRzUnVsZSA9IG5ldyBldmVudHMuUnVsZSh0aGlzLCBcIlJ1bGVcIiwge1xuICAgICAgICBzY2hlZHVsZTogcHJvcFNjaGVkdWxlLFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXZlbnRzUnVsZSA9IGV2ZW50c1J1bGU7XG4gICAgfVxuXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgLy8gQ3JlYXRlIFRhcmdldHNcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICAgIGlmICgham9iKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIGpvYiBkZWZpbmVkIGZvciB0aGUgXCIke2lkfVwiIENyb25gKTtcbiAgICB9XG4gICAgdGhpcy5qb2JGdW5jdGlvbiA9IEZ1bmMuZnJvbURlZmluaXRpb24odGhpcywgXCJKb2JcIiwgam9iKTtcbiAgICB0aGlzLmV2ZW50c1J1bGUuYWRkVGFyZ2V0KFxuICAgICAgbmV3IGV2ZW50c1RhcmdldHMuTGFtYmRhRnVuY3Rpb24odGhpcy5qb2JGdW5jdGlvbilcbiAgICApO1xuICB9XG5cbiAgYXR0YWNoUGVybWlzc2lvbnMocGVybWlzc2lvbnM6IFBlcm1pc3Npb25zKTogdm9pZCB7XG4gICAgdGhpcy5qb2JGdW5jdGlvbi5hdHRhY2hQZXJtaXNzaW9ucyhwZXJtaXNzaW9ucyk7XG4gIH1cbn1cbiJdfQ==