"use strict";
/* eslint-disable @typescript-eslint/ban-ts-comment*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.isConstructOf = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
function isConstructOf(construct, moduleName) {
    var _a, _b;
    // We need to check if construct is an CDK construct. To do that:
    // - we cannot use the `construct instanceof` check because ie. the PolicyStatement
    //   instance in the user's app might come from a different npm package version
    // - we cannot use the `construct.constructor.name` check because the constructor
    //   name can be prefixed with a number ie. PolicyStatement2
    //
    // Therefore we are going to get the constructor's fqn. The constructor for a CDK
    // construct looks like:
    //    [class Bucket2 extends BucketBase] {
    //      [Symbol(jsii.rtti)]: { fqn: '@aws-cdk/aws-s3.Bucket', version: '1.91.0' }
    //    }
    // We will check against `fqn`.
    let cdkModule;
    // @ts-expect-error TS7053: Element implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'Function'.
    const fqn = (_b = (_a = construct === null || construct === void 0 ? void 0 : construct.constructor) === null || _a === void 0 ? void 0 : _a[JSII_RTTI_SYMBOL_1]) === null || _b === void 0 ? void 0 : _b.fqn;
    if (typeof fqn === "string" && fqn.startsWith("@aws-cdk/")) {
        cdkModule = fqn.substring(9);
    }
    return cdkModule === moduleName;
}
exports.isConstructOf = isConstructOf;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RydWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvY29uc3RydWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxxREFBcUQ7OztBQUlyRCxNQUFNLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7QUFFbkQsU0FBZ0IsYUFBYSxDQUMzQixTQUF3QixFQUN4QixVQUFrQjs7SUFFbEIsaUVBQWlFO0lBQ2pFLG1GQUFtRjtJQUNuRiwrRUFBK0U7SUFDL0UsaUZBQWlGO0lBQ2pGLDREQUE0RDtJQUM1RCxFQUFFO0lBQ0YsaUZBQWlGO0lBQ2pGLHdCQUF3QjtJQUN4QiwwQ0FBMEM7SUFDMUMsaUZBQWlGO0lBQ2pGLE9BQU87SUFDUCwrQkFBK0I7SUFDL0IsSUFBSSxTQUFTLENBQUM7SUFDZCxtSkFBbUo7SUFDbkosTUFBTSxHQUFHLEdBQUcsTUFBQSxNQUFBLFNBQVMsYUFBVCxTQUFTLHVCQUFULFNBQVMsQ0FBRSxXQUFXLDBDQUFHLGtCQUFrQixDQUFDLDBDQUFFLEdBQUcsQ0FBQztJQUM5RCxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFFO1FBQzFELFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzlCO0lBRUQsT0FBTyxTQUFTLEtBQUssVUFBVSxDQUFDO0FBQ2xDLENBQUM7QUF4QkQsc0NBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50Ki9cblxuaW1wb3J0ICogYXMgY2RrIGZyb20gXCJAYXdzLWNkay9jb3JlXCI7XG5cbmNvbnN0IEpTSUlfUlRUSV9TWU1CT0xfMSA9IFN5bWJvbC5mb3IoXCJqc2lpLnJ0dGlcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbnN0cnVjdE9mKFxuICBjb25zdHJ1Y3Q6IGNkay5Db25zdHJ1Y3QsXG4gIG1vZHVsZU5hbWU6IHN0cmluZ1xuKTogYm9vbGVhbiB7XG4gIC8vIFdlIG5lZWQgdG8gY2hlY2sgaWYgY29uc3RydWN0IGlzIGFuIENESyBjb25zdHJ1Y3QuIFRvIGRvIHRoYXQ6XG4gIC8vIC0gd2UgY2Fubm90IHVzZSB0aGUgYGNvbnN0cnVjdCBpbnN0YW5jZW9mYCBjaGVjayBiZWNhdXNlIGllLiB0aGUgUG9saWN5U3RhdGVtZW50XG4gIC8vICAgaW5zdGFuY2UgaW4gdGhlIHVzZXIncyBhcHAgbWlnaHQgY29tZSBmcm9tIGEgZGlmZmVyZW50IG5wbSBwYWNrYWdlIHZlcnNpb25cbiAgLy8gLSB3ZSBjYW5ub3QgdXNlIHRoZSBgY29uc3RydWN0LmNvbnN0cnVjdG9yLm5hbWVgIGNoZWNrIGJlY2F1c2UgdGhlIGNvbnN0cnVjdG9yXG4gIC8vICAgbmFtZSBjYW4gYmUgcHJlZml4ZWQgd2l0aCBhIG51bWJlciBpZS4gUG9saWN5U3RhdGVtZW50MlxuICAvL1xuICAvLyBUaGVyZWZvcmUgd2UgYXJlIGdvaW5nIHRvIGdldCB0aGUgY29uc3RydWN0b3IncyBmcW4uIFRoZSBjb25zdHJ1Y3RvciBmb3IgYSBDREtcbiAgLy8gY29uc3RydWN0IGxvb2tzIGxpa2U6XG4gIC8vICAgIFtjbGFzcyBCdWNrZXQyIGV4dGVuZHMgQnVja2V0QmFzZV0ge1xuICAvLyAgICAgIFtTeW1ib2woanNpaS5ydHRpKV06IHsgZnFuOiAnQGF3cy1jZGsvYXdzLXMzLkJ1Y2tldCcsIHZlcnNpb246ICcxLjkxLjAnIH1cbiAgLy8gICAgfVxuICAvLyBXZSB3aWxsIGNoZWNrIGFnYWluc3QgYGZxbmAuXG4gIGxldCBjZGtNb2R1bGU7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgVFM3MDUzOiBFbGVtZW50IGltcGxpY2l0bHkgaGFzIGFuICdhbnknIHR5cGUgYmVjYXVzZSBleHByZXNzaW9uIG9mIHR5cGUgJ3VuaXF1ZSBzeW1ib2wnIGNhbid0IGJlIHVzZWQgdG8gaW5kZXggdHlwZSAnRnVuY3Rpb24nLlxuICBjb25zdCBmcW4gPSBjb25zdHJ1Y3Q/LmNvbnN0cnVjdG9yPy5bSlNJSV9SVFRJX1NZTUJPTF8xXT8uZnFuO1xuICBpZiAodHlwZW9mIGZxbiA9PT0gXCJzdHJpbmdcIiAmJiBmcW4uc3RhcnRzV2l0aChcIkBhd3MtY2RrL1wiKSkge1xuICAgIGNka01vZHVsZSA9IGZxbi5zdWJzdHJpbmcoOSk7XG4gIH1cblxuICByZXR1cm4gY2RrTW9kdWxlID09PSBtb2R1bGVOYW1lO1xufVxuIl19