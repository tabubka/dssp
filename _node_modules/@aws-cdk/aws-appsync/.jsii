{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cognito": "1.93.0",
    "@aws-cdk/aws-dynamodb": "1.93.0",
    "@aws-cdk/aws-ec2": "1.93.0",
    "@aws-cdk/aws-iam": "1.93.0",
    "@aws-cdk/aws-lambda": "1.93.0",
    "@aws-cdk/aws-rds": "1.93.0",
    "@aws-cdk/aws-s3-assets": "1.93.0",
    "@aws-cdk/aws-secretsmanager": "1.93.0",
    "@aws-cdk/core": "1.93.0",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-cognito": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Cognito",
          "packageId": "Amazon.CDK.AWS.Cognito"
        },
        "java": {
          "maven": {
            "artifactId": "cognito",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cognito"
        },
        "js": {
          "npm": "@aws-cdk/aws-cognito"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cognito",
          "module": "aws_cdk.aws_cognito"
        }
      }
    },
    "@aws-cdk/aws-dynamodb": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.DynamoDB",
          "packageId": "Amazon.CDK.AWS.DynamoDB"
        },
        "java": {
          "maven": {
            "artifactId": "dynamodb",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.dynamodb"
        },
        "js": {
          "npm": "@aws-cdk/aws-dynamodb"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-dynamodb",
          "module": "aws_cdk.aws_dynamodb"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-rds": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.RDS",
          "packageId": "Amazon.CDK.AWS.RDS"
        },
        "java": {
          "maven": {
            "artifactId": "rds",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.rds"
        },
        "js": {
          "npm": "@aws-cdk/aws-rds"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-rds",
          "module": "aws_cdk.aws_rds"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::AppSync",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.24.0 (build b722f66)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "appsync"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-appsync",
  "readme": {
    "markdown": "# AWS AppSync Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThe `@aws-cdk/aws-appsync` package contains constructs for building flexible\nAPIs that use GraphQL.\n\n## Example\n\n## DynamoDB\n\nExample of a GraphQL API with `AWS_IAM` authorization resolving into a DynamoDb\nbackend data source.\n\nGraphQL schema file `schema.graphql`:\n\n```gql\ntype demo {\n  id: String!\n  version: String!\n}\ntype Query {\n  getDemos: [ demo! ]\n}\ninput DemoInput {\n  version: String!\n}\ntype Mutation {\n  addDemo(input: DemoInput!): demo\n}\n```\n\nCDK stack file `app-stack.ts`:\n\n```ts\nimport * as appsync from '@aws-cdk/aws-appsync';\nimport * as db from '@aws-cdk/aws-dynamodb';\n\nconst api = new appsync.GraphqlApi(stack, 'Api', {\n  name: 'demo',\n  schema: appsync.Schema.fromAsset(join(__dirname, 'schema.graphql')),\n  authorizationConfig: {\n    defaultAuthorization: {\n      authorizationType: appsync.AuthorizationType.IAM\n    },\n  },\n  xrayEnabled: true,\n});\n\nconst demoTable = new db.Table(stack, 'DemoTable', {\n  partitionKey: {\n    name: 'id',\n    type: db.AttributeType.STRING,\n  },\n});\n\nconst demoDS = api.addDynamoDbDataSource('demoDataSource', demoTable);\n\n// Resolver for the Query \"getDemos\" that scans the DynamoDb table and returns the entire list.\ndemoDS.createResolver({\n  typeName: 'Query',\n  fieldName: 'getDemos',\n  requestMappingTemplate: appsync.MappingTemplate.dynamoDbScanTable(),\n  responseMappingTemplate: appsync.MappingTemplate.dynamoDbResultList(),\n});\n\n// Resolver for the Mutation \"addDemo\" that puts the item into the DynamoDb table.\ndemoDS.createResolver({\n  typeName: 'Mutation',\n  fieldName: 'addDemo',\n  requestMappingTemplate: appsync.MappingTemplate.dynamoDbPutItem(\n    appsync.PrimaryKey.partition('id').auto(),\n    appsync.Values.projecting('input')\n  ),\n  responseMappingTemplate: appsync.MappingTemplate.dynamoDbResultItem(),\n});\n```\n\n## Aurora Serverless\n\nAppSync provides a data source for executing SQL commands against Amazon Aurora\nServerless clusters. You can use AppSync resolvers to execute SQL statements\nagainst the Data API with GraphQL queries, mutations, and subscriptions.\n\n```ts\n// Create username and password secret for DB Cluster\nconst secret = new rds.DatabaseSecret(stack, 'AuroraSecret', {\n  username: 'clusteradmin',\n});\n\n// The VPC to place the cluster in\nconst vpc = new ec2.Vpc(stack, 'AuroraVpc');\n\n// Create the serverless cluster, provide all values needed to customise the database.\nconst cluster = new rds.ServerlessCluster(stack, 'AuroraCluster', {\n  engine: rds.DatabaseClusterEngine.AURORA_MYSQL,\n  vpc,\n  credentials: { username: 'clusteradmin' },\n  clusterIdentifier: 'db-endpoint-test',\n  defaultDatabaseName: 'demos',\n});\n\n// Build a data source for AppSync to access the database.\nconst rdsDS = api.addRdsDataSource('rds', cluster, secret, 'demos');\n\n// Set up a resolver for an RDS query.\nrdsDS.createResolver({\n  typeName: 'Query',\n  fieldName: 'getDemosRds',\n  requestMappingTemplate: MappingTemplate.fromString(`\n  {\n    \"version\": \"2018-05-29\",\n    \"statements\": [\n      \"SELECT * FROM demos\"\n    ]\n  }\n  `),\n  responseMappingTemplate: MappingTemplate.fromString(`\n    $util.rds.toJsonObject($ctx.result)\n  `),\n});\n\n// Set up a resolver for an RDS mutation.\nrdsDS.createResolver({\n  typeName: 'Mutation',\n  fieldName: 'addDemoRds',\n  requestMappingTemplate: MappingTemplate.fromString(`\n  {\n    \"version\": \"2018-05-29\",\n    \"statements\": [\n      \"INSERT INTO demos VALUES (:id, :version)\",\n      \"SELECT * WHERE id = :id\"\n    ],\n    \"variableMap\": {\n      \":id\": $util.toJson($util.autoId()),\n      \":version\": $util.toJson($ctx.args.version)\n    }\n  }\n  `),\n  responseMappingTemplate: MappingTemplate.fromString(`\n    $util.rds.toJsonObject($ctx.result)\n  `),\n});\n```\n\n### HTTP Endpoints\n\nGraphQL schema file `schema.graphql`:\n\n```gql\ntype job {\n  id: String!\n  version: String!\n}\n\ninput DemoInput {\n  version: String!\n}\n\ntype Mutation {\n  callStepFunction(input: DemoInput!): job\n}\n```\n\nGraphQL request mapping template `request.vtl`:\n\n```json\n{\n  \"version\": \"2018-05-29\",\n  \"method\": \"POST\",\n  \"resourcePath\": \"/\",\n  \"params\": {\n    \"headers\": {\n      \"content-type\": \"application/x-amz-json-1.0\",\n      \"x-amz-target\":\"AWSStepFunctions.StartExecution\"\n    },\n    \"body\": {\n      \"stateMachineArn\": \"<your step functions arn>\",\n      \"input\": \"{ \\\"id\\\": \\\"$context.arguments.id\\\" }\"\n    }\n  }\n}\n```\n\nGraphQL response mapping template `response.vtl`:\n\n```json\n{\n  \"id\": \"${context.result.id}\"\n}\n```\n\nCDK stack file `app-stack.ts`:\n\n```ts\nimport * as appsync from '@aws-cdk/aws-appsync';\n\nconst api = new appsync.GraphqlApi(scope, 'api', {\n  name: 'api',\n  schema: appsync.Schema.fromFile(join(__dirname, 'schema.graphql')),\n});\n\nconst httpDs = api.addHttpDataSource(\n  'ds',\n  'https://states.amazonaws.com',\n  {\n    name: 'httpDsWithStepF',\n    description: 'from appsync to StepFunctions Workflow',\n    authorizationConfig: {\n      signingRegion: 'us-east-1',\n      signingServiceName: 'states'\n    }\n  }\n);\n\nhttpDs.createResolver({\n  typeName: 'Mutation',\n  fieldName: 'callStepFunction',\n  requestMappingTemplate: MappingTemplate.fromFile('request.vtl'),\n  responseMappingTemplate: MappingTemplate.fromFile('response.vtl')\n});\n```\n\n### Schema\n\nEvery GraphQL Api needs a schema to define the Api. CDK offers `appsync.Schema`\nfor static convenience methods for various types of schema declaration: code-first\nor schema-first.\n\n#### Code-First\n\nWhen declaring your GraphQL Api, CDK defaults to a code-first approach if the\n`schema` property is not configured.\n\n```ts\nconst api = new appsync.GraphqlApi(stack, 'api', { name: 'myApi' });\n```\n\nCDK will declare a `Schema` class that will give your Api access functions to\ndefine your schema code-first: `addType`, `addObjectType`, `addToSchema`, etc.\n\nYou can also declare your `Schema` class outside of your CDK stack, to define\nyour schema externally.\n\n```ts\nconst schema = new appsync.Schema();\nschema.addObjectType('demo', {\n  definition: { id: appsync.GraphqlType.id() },\n});\nconst api = new appsync.GraphqlApi(stack, 'api', {\n  name: 'myApi',\n  schema\n});\n```\n\nSee the [code-first schema](#Code-First-Schema) section for more details.\n\n#### Schema-First\n\nYou can define your GraphQL Schema from a file on disk. For convenience, use\nthe `appsync.Schema.fromAsset` to specify the file representing your schema.\n\n```ts\nconst api = appsync.GraphqlApi(stack, 'api', {\n  name: 'myApi',\n  schema: appsync.Schema.fromAsset(join(__dirname, 'schema.graphl')),\n});\n```\n\n### Imports\n\nAny GraphQL Api that has been created outside the stack can be imported from\nanother stack into your CDK app. Utilizing the `fromXxx` function, you have\nthe ability to add data sources and resolvers through a `IGraphqlApi` interface.\n\n```ts\nconst importedApi = appsync.GraphqlApi.fromGraphqlApiAttributes(stack, 'IApi', {\n  graphqlApiId: api.apiId,\n  graphqlArn: api.arn,\n});\nimportedApi.addDynamoDbDataSource('TableDataSource', table);\n```\n\nIf you don't specify `graphqlArn` in `fromXxxAttributes`, CDK will autogenerate\nthe expected `arn` for the imported api, given the `apiId`. For creating data\nsources and resolvers, an `apiId` is sufficient.\n\n### Permissions\n\nWhen using `AWS_IAM` as the authorization type for GraphQL API, an IAM Role\nwith correct permissions must be used for access to API.\n\nWhen configuring permissions, you can specify specific resources to only be\naccessible by `IAM` authorization. For example, if you want to only allow mutability\nfor `IAM` authorized access you would configure the following.\n\nIn `schema.graphql`:\n\n```ts\ntype Mutation {\n  updateExample(...): ...\n    @aws_iam\n}\n```\n\nIn `IAM`:\n\n```json\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n      {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n            \"appsync:GraphQL\"\n         ],\n         \"Resource\": [\n            \"arn:aws:appsync:REGION:ACCOUNT_ID:apis/GRAPHQL_ID/types/Mutation/fields/updateExample\"\n         ]\n      }\n   ]\n}\n```\n\nSee [documentation](https://docs.aws.amazon.com/appsync/latest/devguide/security.html#aws-iam-authorization) for more details.\n\nTo make this easier, CDK provides `grant` API.\n\nUse the `grant` function for more granular authorization.\n\n```ts\nconst role = new iam.Role(stack, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n});\nconst api = new appsync.GraphqlApi(stack, 'API', {\n  definition\n});\n\napi.grant(role, appsync.IamResource.custom('types/Mutation/fields/updateExample'), 'appsync:GraphQL')\n```\n\n#### IamResource\n\nIn order to use the `grant` functions, you need to use the class `IamResource`.\n\n- `IamResource.custom(...arns)` permits custom ARNs and requires an argument.\n\n- `IamResouce.ofType(type, ...fields)` permits ARNs for types and their fields.\n\n- `IamResource.all()` permits ALL resources.\n\n#### Generic Permissions\n\nAlternatively, you can use more generic `grant` functions to accomplish the same usage.\n\nThese include:\n\n- grantMutation (use to grant access to Mutation fields)\n- grantQuery (use to grant access to Query fields)\n- grantSubscription (use to grant access to Subscription fields)\n\n```ts\n// For generic types\napi.grantMutation(role, 'updateExample');\n\n// For custom types and granular design\napi.grant(role, appsync.IamResource.ofType('Mutation', 'updateExample'), 'appsync:GraphQL');\n```\n\n### Pipeline Resolvers and AppSync Functions\n\nAppSync Functions are local functions that perform certain operations onto a\nbackend data source. Developers can compose operations (Functions) and execute\nthem in sequence with Pipeline Resolvers.\n\n```ts\nconst appsyncFunction = new appsync.AppsyncFunction(stack, 'function', {\n  name: 'appsync_function',\n  api: api,\n  dataSource: apiDataSource,\n  requestMappingTemplate: appsync.MappingTemplate.fromFile('request.vtl'),\n  responseMappingTemplate: appsync.MappingTemplate.fromFile('response.vtl'),\n});\n```\n\nAppSync Functions are used in tandem with pipeline resolvers to compose multiple\noperations.\n\n```ts\nconst pipelineResolver = new appsync.Resolver(stack, 'pipeline', {\n  name: 'pipeline_resolver',\n  api: api,\n  dataSource: apiDataSource,\n  requestMappingTemplate: appsync.MappingTemplate.fromFile('beforeRequest.vtl'),\n  pipelineConfig: [appsyncFunction],\n  responseMappingTemplate: appsync.MappingTemplate.fromFile('afterResponse.vtl'),\n});\n```\n\nLearn more about Pipeline Resolvers and AppSync Functions [here](https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html).\n\n### Code-First Schema\n\nCDK offers the ability to generate your schema in a code-first approach.\nA code-first approach offers a developer workflow with:\n\n- **modularity**: organizing schema type definitions into different files\n- **reusability**: simplifying down boilerplate/repetitive code\n- **consistency**: resolvers and schema definition will always be synced\n\nThe code-first approach allows for **dynamic** schema generation. You can generate your schema based on variables and templates to reduce code duplication.\n\n#### Code-First Example\n\nTo showcase the code-first approach. Let's try to model the following schema segment.\n\n```gql\ninterface Node {\n  id: String\n}\n\ntype Query {\n  allFilms(after: String, first: Int, before: String, last: Int): FilmConnection\n}\n\ntype FilmNode implements Node {\n  filmName: String\n}\n\ntype FilmConnection {\n  edges: [FilmEdge]\n  films: [Film]\n  totalCount: Int\n}\n\ntype FilmEdge {\n  node: Film\n  cursor: String\n}\n```\n\nAbove we see a schema that allows for generating paginated responses. For example,\nwe can query `allFilms(first: 100)` since `FilmConnection` acts as an intermediary\nfor holding `FilmEdges` we can write a resolver to return the first 100 films.\n\nIn a separate file, we can declare our scalar types: `scalar-types.ts`.\n\n```ts\nimport { GraphqlType } from '@aws-cdk/aws-appsync';\n\nexport const string = appsync.GraphqlType.string();\nexport const int = appsync.GraphqlType.int();\n```\n\nIn another separate file, we can declare our object types and related functions.\nWe will call this file `object-types.ts` and we will have created it in a way that\nallows us to generate other `XxxConnection` and `XxxEdges` in the future.\n\n```ts\nconst pluralize = require('pluralize');\nimport * as scalar from './scalar-types.ts';\nimport * as appsync from '@aws-cdk/aws-appsync';\n\nexport const args = {\n  after: scalar.string,\n  first: scalar.int,\n  before: scalar.string,\n  last: scalar.int,\n};\n\nexport const Node = new appsync.InterfaceType('Node', {\n  definition: { id: scalar.string }\n});\nexport const FilmNode = new appsync.ObjectType.implementInterface('FilmNode', {\n  interfaceTypes: [Node],\n  definition: { filmName: scalar.string }\n});\n\nexport function generateEdgeAndConnection(base: appsync.ObjectType) {\n  const edge = new appsync.ObjectType(`${base.name}Edge`, {\n    definition: { node: base.attribute(), cursor: scalar.string }\n  });\n  const connection = new appsync.ObjectType(`${base.name}Connection`, {\n    definition: {\n      edges: edges.attribute({ isList: true }),\n      [pluralize(base.name)]: base.attribute({ isList: true }),\n      totalCount: scalar.int,\n    }\n  });\n  return { edge: edge, connection: connection };\n}\n```\n\nFinally, we will go to our `cdk-stack` and combine everything together\nto generate our schema.\n\n```ts\nimport * as appsync from '@aws-cdk/aws-appsync';\nimport * as schema from './object-types';\n\nconst api = new appsync.GraphqlApi(stack, 'Api', {\n  name: 'demo',\n});\n\nthis.objectTypes = [ schema.Node, schema.Film ];\n\nconst filmConnections = schema.generateEdgeAndConnection(schema.Film);\n\napi.addQuery('allFilms', new appsync.ResolvableField({\n    returnType: filmConnections.connection.attribute(),\n    args: schema.args,\n    dataSource: dummyDataSource,\n    requestMappingTemplate: dummyRequest,\n    responseMappingTemplate: dummyResponse,\n  }),\n});\n\nthis.objectTypes.map((t) => api.addType(t));\nObject.keys(filmConnections).forEach((key) => api.addType(filmConnections[key]));\n```\n\nNotice how we can utilize the `generateEdgeAndConnection` function to generate\nObject Types. In the future, if we wanted to create more Object Types, we can simply\ncreate the base Object Type (i.e. Film) and from there we can generate its respective\n`Connections` and `Edges`.\n\nCheck out a more in-depth example [here](https://github.com/BryanPan342/starwars-code-first).\n\n#### GraphQL Types\n\nOne of the benefits of GraphQL is its strongly typed nature. We define the\ntypes within an object, query, mutation, interface, etc. as **GraphQL Types**.\n\nGraphQL Types are the building blocks of types, whether they are scalar, objects,\ninterfaces, etc. GraphQL Types can be:\n\n- [**Scalar Types**](https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html): Id, Int, String, AWSDate, etc.\n- [**Object Types**](#Object-Types): types that you generate (i.e. `demo` from the example above)\n- [**Interface Types**](#Interface-Types): abstract types that define the base implementation of other\nIntermediate Types\n\nMore concretely, GraphQL Types are simply the types appended to variables.\nReferencing the object type `Demo` in the previous example, the GraphQL Types\nis `String!` and is applied to both the names `id` and `version`.\n\n#### Directives\n\n`Directives` are attached to a field or type and affect the execution of queries,\nmutations, and types. With AppSync, we use `Directives` to configure authorization.\nCDK provides static functions to add directives to your Schema.\n\n- `Directive.iam()` sets a type or field's authorization to be validated through `Iam`\n- `Directive.apiKey()` sets a type or field's authorization to be validated through a `Api Key`\n- `Directive.oidc()` sets a type or field's authorization to be validated through `OpenID Connect`\n- `Directive.cognito(...groups: string[])` sets a type or field's authorization to be validated\nthrough `Cognito User Pools`\n  - `groups` the name of the cognito groups to give access\n\nTo learn more about authorization and directives, read these docs [here](https://docs.aws.amazon.com/appsync/latest/devguide/security.html).\n\n#### Field and Resolvable Fields\n\nWhile `GraphqlType` is a base implementation for GraphQL fields, we have abstractions\non top of `GraphqlType` that provide finer grain support.\n\n#### Field\n\n`Field` extends `GraphqlType` and will allow you to define arguments. [**Interface Types**](#Interface-Types) are not resolvable and this class will allow you to define arguments,\nbut not its resolvers.\n\nFor example, if we want to create the following type:\n\n```gql\ntype Node {\n  test(argument: string): String\n}\n```\n\nThe CDK code required would be:\n\n```ts\nconst field = new appsync.Field({\n  returnType: appsync.GraphqlType.string(),\n  args: {\n    argument: appsync.GraphqlType.string(),\n  },\n});\nconst type = new appsync.InterfaceType('Node', {\n  definition: { test: field },\n});\n```\n\n#### Resolvable Fields\n\n`ResolvableField` extends `Field` and will allow you to define arguments and its resolvers.\n[**Object Types**](#Object-Types) can have fields that resolve and perform operations on\nyour backend.\n\nYou can also create resolvable fields for object types.\n\n```gql\ntype Info {\n  node(id: String): String\n}\n```\n\nThe CDK code required would be:\n\n```ts\nconst info = new appsync.ObjectType('Info', {\n  definition: {\n    node: new appsync.ResolvableField({\n      returnType: appsync.GraphqlType.string(),\n      args: {\n        id: appsync.GraphqlType.string(),\n      },\n      dataSource: api.addNoneDataSource('none'),\n      requestMappingTemplate: dummyRequest,\n      responseMappingTemplate: dummyResponse,\n    }),\n  },\n});\n```\n\nTo nest resolvers, we can also create top level query types that call upon\nother types. Building off the previous example, if we want the following graphql\ntype definition:\n\n```gql\ntype Query {\n  get(argument: string): Info\n}\n```\n\nThe CDK code required would be:\n\n```ts\nconst query = new appsync.ObjectType('Query', {\n  definition: {\n    get: new appsync.ResolvableField({\n      returnType: appsync.GraphqlType.string(),\n      args: {\n        argument: appsync.GraphqlType.string(),\n      },\n      dataSource: api.addNoneDataSource('none'),\n      requestMappingTemplate: dummyRequest,\n      responseMappingTemplate: dummyResponse,\n    }),\n  },\n});\n```\n\nLearn more about fields and resolvers [here](https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-overview.html).\n\n#### Intermediate Types\n\nIntermediate Types are defined by Graphql Types and Fields. They have a set of defined\nfields, where each field corresponds to another type in the system. Intermediate\nTypes will be the meat of your GraphQL Schema as they are the types defined by you.\n\nIntermediate Types include:\n\n- [**Interface Types**](#Interface-Types)\n- [**Object Types**](#Object-Types)\n- [**Enum Types**](#Enum-Types)\n- [**Input Types**](#Input-Types)\n- [**Union Types**](#Union-Types)\n\n#### Interface Types\n\n**Interface Types** are abstract types that define the implementation of other\nintermediate types. They are useful for eliminating duplication and can be used\nto generate Object Types with less work.\n\nYou can create Interface Types ***externally***.\n\n```ts\nconst node = new appsync.InterfaceType('Node', {\n  definition: {\n    id: appsync.GraphqlType.string({ isRequired: true }),\n  },\n});\n```\n\nTo learn more about **Interface Types**, read the docs [here](https://graphql.org/learn/schema/#interfaces).\n\n##### Object Types\n\n**Object Types** are types that you declare. For example, in the [code-first example](#code-first-example)\nthe `demo` variable is an **Object Type**. **Object Types** are defined by\nGraphQL Types and are only usable when linked to a GraphQL Api.\n\nYou can create Object Types in three ways:\n\n1. Object Types can be created ***externally***.\n\n    ```ts\n    const api = new appsync.GraphqlApi(stack, 'Api', {\n      name: 'demo',\n    });\n    const demo = new appsync.ObjectType('Demo', {\n      defintion: {\n        id: appsync.GraphqlType.string({ isRequired: true }),\n        version: appsync.GraphqlType.string({ isRequired: true }),\n      },\n    });\n\n    api.addType(object);\n    ```\n\n    > This method allows for reusability and modularity, ideal for larger projects.\n    For example, imagine moving all Object Type definition outside the stack.\n\n    `scalar-types.ts` - a file for scalar type definitions\n\n    ```ts\n    export const required_string = appsync.GraphqlType.string({ isRequired: true });\n    ```\n\n    `object-types.ts` - a file for object type definitions\n\n    ```ts\n    import { required_string } from './scalar-types';\n    export const demo = new appsync.ObjectType('Demo', {\n      defintion: {\n        id: required_string,\n        version: required_string,\n      },\n    });\n    ```\n\n    `cdk-stack.ts` - a file containing our cdk stack\n\n    ```ts\n    import { demo } from './object-types';\n    api.addType(demo);\n    ```\n\n2. Object Types can be created ***externally*** from an Interface Type.\n\n    ```ts\n    const node = new appsync.InterfaceType('Node', {\n      definition: {\n        id: appsync.GraphqlType.string({ isRequired: true }),\n      },\n    });\n    const demo = new appsync.ObjectType('Demo', {\n      interfaceTypes: [ node ],\n      defintion: {\n        version: appsync.GraphqlType.string({ isRequired: true }),\n      },\n    });\n    ```\n\n    > This method allows for reusability and modularity, ideal for reducing code duplication.\n\nTo learn more about **Object Types**, read the docs [here](https://graphql.org/learn/schema/#object-types-and-fields).\n\n### Enum Types\n\n**Enum Types** are a special type of Intermediate Type. They restrict a particular\nset of allowed values for other Intermediate Types.\n\n```gql\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n```\n\n> This means that wherever we use the type Episode in our schema, we expect it to\n> be exactly one of NEWHOPE, EMPIRE, or JEDI.\n\nThe above GraphQL Enumeration Type can be expressed in CDK as the following:\n\n```ts\nconst episode = new appsync.EnumType('Episode', {\n  definition: [\n    'NEWHOPE',\n    'EMPIRE',\n    'JEDI',\n  ],\n});\napi.addType(episode);\n```\n\nTo learn more about **Enum Types**, read the docs [here](https://graphql.org/learn/schema/#enumeration-types).\n\n#### Input Types\n\n**Input Types** are special types of Intermediate Types. They give users an\neasy way to pass complex objects for top level Mutation and Queries.\n\n```gql\ninput Review {\n  stars: Int!\n  commentary: String\n}\n```\n\nThe above GraphQL Input Type can be expressed in CDK as the following:\n\n```ts\nconst review = new appsync.InputType('Review', {\n  definition: {\n    stars: GraphqlType.int({ isRequired: true }),\n    commentary: GraphqlType.string(),\n  },\n});\napi.addType(review);\n```\n\nTo learn more about **Input Types**, read the docs [here](https://graphql.org/learn/schema/#input-types).\n\n### Union Types\n\n**Union Types** are a special type of Intermediate Type. They are similar to\nInterface Types, but they cannot specify any common fields between types.\n\n**Note:** the fields of a union type need to be `Object Types`. In other words, you\ncan't create a union type out of interfaces, other unions, or inputs.\n\n```gql\nunion Search = Human | Droid | Starship\n```\n\nThe above GraphQL Union Type encompasses the Object Types of Human, Droid and Starship. It\ncan be expressed in CDK as the following:\n\n```ts\nconst string = appsync.GraphqlType.string();\nconst human = new appsync.ObjectType('Human', { definition: { name: string } });\nconst droid = new appsync.ObjectType('Droid', { definition: { name: string } });\nconst starship = new appsync.ObjectType('Starship', { definition: { name: string } }););\nconst search = new appsync.UnionType('Search', {\n  definition: [ human, droid, starship ],\n});\napi.addType(search);\n```\n\nTo learn more about **Union Types**, read the docs [here](https://graphql.org/learn/schema/#union-types).\n\n#### Query\n\nEvery schema requires a top level Query type. By default, the schema will look\nfor the `Object Type` named `Query`. The top level `Query` is the **only** exposed\ntype that users can access to perform `GET` operations on your Api.\n\nTo add fields for these queries, we can simply run the `addQuery` function to add\nto the schema's `Query` type.\n\n```ts\nconst string = appsync.GraphqlType.string();\nconst int = appsync.GraphqlType.int();\napi.addQuery('allFilms', new appsync.ResolvableField({\n  returnType: filmConnection.attribute(),\n  args: { after: string, first: int, before: string, last: int},\n  dataSource: api.addNoneDataSource('none'),\n  requestMappingTemplate: dummyRequest,\n  responseMappingTemplate: dummyResponse,\n}));\n```\n\nTo learn more about top level operations, check out the docs [here](https://docs.aws.amazon.com/appsync/latest/devguide/graphql-overview.html).\n\n#### Mutation\n\nEvery schema **can** have a top level Mutation type. By default, the schema will look\nfor the `ObjectType` named `Mutation`. The top level `Mutation` Type is the only exposed\ntype that users can access to perform `mutable` operations on your Api.\n\nTo add fields for these mutations, we can simply run the `addMutation` function to add\nto the schema's `Mutation` type.\n\n```ts\nconst string = appsync.GraphqlType.string();\nconst int = appsync.GraphqlType.int();\napi.addMutation('addFilm', new appsync.ResolvableField({\n  returnType: film.attribute(),\n  args: { name: string, film_number: int },\n  dataSource: api.addNoneDataSource('none'),\n  requestMappingTemplate: dummyRequest,\n  responseMappingTemplate: dummyResponse,\n}));\n```\n\nTo learn more about top level operations, check out the docs [here](https://docs.aws.amazon.com/appsync/latest/devguide/graphql-overview.html).\n\n#### Subscription\n\nEvery schema **can** have a top level Subscription type. The top level `Subscription` Type\nis the only exposed type that users can access to invoke a response to a mutation. `Subscriptions`\nnotify users when a mutation specific mutation is called. This means you can make any data source\nreal time by specify a GraphQL Schema directive on a mutation.\n\n**Note**: The AWS AppSync client SDK automatically handles subscription connection management.\n\nTo add fields for these subscriptions, we can simply run the `addSubscription` function to add\nto the schema's `Subscription` type.\n\n```ts\napi.addSubscription('addedFilm', new appsync.ResolvableField({\n  returnType: film.attribute(),\n  args: { id: appsync.GraphqlType.id({ isRequired: true }) },\n  directive: [appsync.Directive.subscribe('addFilm')],\n}));\n```\n\nTo learn more about top level operations, check out the docs [here](https://docs.aws.amazon.com/appsync/latest/devguide/real-time-data.html).\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-appsync",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.AppSync",
      "packageId": "Amazon.CDK.AWS.AppSync"
    },
    "java": {
      "maven": {
        "artifactId": "appsync",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.appsync"
    },
    "js": {
      "npm": "@aws-cdk/aws-appsync"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-appsync",
      "module": "aws_cdk.aws_appsync"
    }
  },
  "types": {
    "@aws-cdk/aws-appsync.AddFieldOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The options to add a field to an Intermediate Type."
      },
      "fqn": "@aws-cdk/aws-appsync.AddFieldOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-base.ts",
        "line": 79
      },
      "name": "AddFieldOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no IField",
            "remarks": "This option must be configured for Object, Interface,\nInput and Union Types.",
            "stability": "experimental",
            "summary": "The resolvable field to add."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 97
          },
          "name": "field",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IField"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no fieldName",
            "remarks": "This option must be configured for Object, Interface,\nInput and Enum Types.",
            "stability": "experimental",
            "summary": "The name of the field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 88
          },
          "name": "fieldName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ApiKeyConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration for API Key authorization in AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.ApiKeyConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 102
      },
      "name": "ApiKeyConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- 'Default API Key created by CDK'",
            "stability": "experimental",
            "summary": "Description of API key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 112
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 7 days rounded down to nearest hour",
            "remarks": "It must be a minimum of 1 day and a maximum of 365 days from date of creation.\nRounded down to the nearest hour.",
            "stability": "experimental",
            "summary": "The time from creation time after which the API key expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 121
          },
          "name": "expires",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Expiration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 'DefaultAPIKey'",
            "stability": "experimental",
            "summary": "Unique name of the API Key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 107
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.AppsyncFunction": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::AppSync::FunctionConfiguration"
        },
        "remarks": "Developers can compose operations (Functions)\nand execute them in sequence with Pipeline Resolvers.",
        "stability": "experimental",
        "summary": "AppSync Functions are local functions that perform certain operations onto a backend data source."
      },
      "fqn": "@aws-cdk/aws-appsync.AppsyncFunction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/appsync-function.ts",
          "line": 129
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AppsyncFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IAppsyncFunction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync-function.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import Appsync Function from arn."
          },
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 89
          },
          "name": "fromAppsyncFunctionAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AppsyncFunctionAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IAppsyncFunction"
            }
          },
          "static": true
        }
      ],
      "name": "AppsyncFunction",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "DataSourceName"
            },
            "stability": "experimental",
            "summary": "the data source of this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 125
          },
          "name": "dataSource",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.BaseDataSource"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "the ARN of the AppSync function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 113
          },
          "name": "functionArn",
          "overrides": "@aws-cdk/aws-appsync.IAppsyncFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "the ID of the AppSync function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 119
          },
          "name": "functionId",
          "overrides": "@aws-cdk/aws-appsync.IAppsyncFunction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "Name"
            },
            "stability": "experimental",
            "summary": "the name of this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 107
          },
          "name": "functionName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.AppsyncFunctionAttributes": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The attributes for imported AppSync Functions."
      },
      "fqn": "@aws-cdk/aws-appsync.AppsyncFunctionAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync-function.ts",
        "line": 53
      },
      "name": "AppsyncFunctionAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the ARN of the AppSync function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 57
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.AppsyncFunctionProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "the CDK properties for AppSync Functions."
      },
      "fqn": "@aws-cdk/aws-appsync.AppsyncFunctionProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseAppsyncFunctionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync-function.ts",
        "line": 39
      },
      "name": "AppsyncFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the GraphQL Api linked to this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 43
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the data source linked to this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 47
          },
          "name": "dataSource",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.BaseDataSource"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.Assign": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Utility class representing the assigment of a value to an attribute."
      },
      "fqn": "@aws-cdk/aws-appsync.Assign",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 86
        },
        "parameters": [
          {
            "name": "attr",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "arg",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the assignment as a map element."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 98
          },
          "name": "putInMap",
          "parameters": [
            {
              "name": "map",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the assignment as a VTL string."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 91
          },
          "name": "renderAsAssignment",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Assign"
    },
    "@aws-cdk/aws-appsync.AttributeValues": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Specifies the attribute value assignments."
      },
      "fqn": "@aws-cdk/aws-appsync.AttributeValues",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 196
        },
        "parameters": [
          {
            "name": "container",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "assignments",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-appsync.Assign"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 195
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allows assigning a value to the specified attribute."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 201
          },
          "name": "attribute",
          "parameters": [
            {
              "name": "attr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AttributeValuesStep"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the attribute value assingments to a VTL string."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 216
          },
          "name": "renderTemplate",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the variables required for `renderTemplate`."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 208
          },
          "name": "renderVariables",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AttributeValues"
    },
    "@aws-cdk/aws-appsync.AttributeValuesStep": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Utility class to allow assigning a value to an attribute."
      },
      "fqn": "@aws-cdk/aws-appsync.AttributeValuesStep",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 225
        },
        "parameters": [
          {
            "name": "attr",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "container",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "assignments",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-appsync.Assign"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 224
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assign the value to the current attribute."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 230
          },
          "name": "is",
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AttributeValues"
            }
          }
        }
      ],
      "name": "AttributeValuesStep"
    },
    "@aws-cdk/aws-appsync.AuthorizationConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration of the API authorization modes."
      },
      "fqn": "@aws-cdk/aws-appsync.AuthorizationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 156
      },
      "name": "AuthorizationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No other modes",
            "stability": "experimental",
            "summary": "Additional authorization modes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 169
          },
          "name": "additionalAuthorizationModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- API Key authorization",
            "stability": "experimental",
            "summary": "Optional authorization configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 162
          },
          "name": "defaultAuthorization",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AuthorizationMode"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.AuthorizationMode": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Interface to specify default or additional authorization(s)."
      },
      "fqn": "@aws-cdk/aws-appsync.AuthorizationMode",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 37
      },
      "name": "AuthorizationMode",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- `AuthorizationType.API_KEY`",
            "see": "https://docs.aws.amazon.com/appsync/latest/devguide/security.html",
            "stability": "experimental",
            "summary": "One of possible four values AppSync supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 45
          },
          "name": "authorizationType",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- name: 'DefaultAPIKey' | description: 'Default API Key created by CDK'",
            "stability": "experimental",
            "summary": "If authorizationType is `AuthorizationType.API_KEY`, this option can be configured."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 55
          },
          "name": "apiKeyConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.ApiKeyConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "If authorizationType is `AuthorizationType.OIDC`, this option is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 60
          },
          "name": "openIdConnectConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.OpenIdConnectConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "If authorizationType is `AuthorizationType.USER_POOL`, this option is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 50
          },
          "name": "userPoolConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.UserPoolConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.AuthorizationType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "enum with all possible values for AppSync authorization type."
      },
      "fqn": "@aws-cdk/aws-appsync.AuthorizationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "API Key authorization type."
          },
          "name": "API_KEY"
        },
        {
          "docs": {
            "remarks": "Can be used with Cognito Identity Pool federated credentials",
            "stability": "experimental",
            "summary": "AWS IAM authorization type."
          },
          "name": "IAM"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cognito User Pool authorization type."
          },
          "name": "USER_POOL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "OpenID Connect authorization type."
          },
          "name": "OIDC"
        }
      ],
      "name": "AuthorizationType"
    },
    "@aws-cdk/aws-appsync.AwsIamConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The authorization config in case the HTTP endpoint requires authorization."
      },
      "fqn": "@aws-cdk/aws-appsync.AwsIamConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 227
      },
      "name": "AwsIamConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The signing region for AWS IAM authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 231
          },
          "name": "signingRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The signing service name for AWS IAM authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 236
          },
          "name": "signingServiceName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BackedDataSource": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BaseDataSource",
      "docs": {
        "remarks": "Do not use directly but use subclasses for resource backed datasources",
        "stability": "experimental",
        "summary": "Abstract AppSync datasource implementation."
      },
      "fqn": "@aws-cdk/aws-appsync.BackedDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 157
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.BackedDataSourceProps"
            }
          },
          {
            "name": "extended",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ExtendedDataSourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 151
      },
      "name": "BackedDataSource",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the principal of the data source to be IGrantable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 155
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BackedDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "properties for an AppSync datasource backed by a resource."
      },
      "fqn": "@aws-cdk/aws-appsync.BackedDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 42
      },
      "name": "BackedDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "-  Create a new role",
            "stability": "experimental",
            "summary": "The IAM service role to be assumed by AppSync to interact with the data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 48
          },
          "name": "serviceRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BaseAppsyncFunctionProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "the base properties for AppSync Functions."
      },
      "fqn": "@aws-cdk/aws-appsync.BaseAppsyncFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync-function.ts",
        "line": 11
      },
      "name": "BaseAppsyncFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the name of the AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 15
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "experimental",
            "summary": "the description for this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 21
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no request mapping template",
            "stability": "experimental",
            "summary": "the request mapping template for the AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 27
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no response mapping template",
            "stability": "experimental",
            "summary": "the response mapping template for the AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 33
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BaseDataSource": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "Do not use directly but use subclasses for concrete datasources",
        "stability": "experimental",
        "summary": "Abstract AppSync datasource implementation."
      },
      "fqn": "@aws-cdk/aws-appsync.BaseDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.BackedDataSourceProps"
            }
          },
          {
            "name": "extended",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ExtendedDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 94
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "creates a new appsync function for this datasource and API using the given properties."
          },
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 139
          },
          "name": "createFunction",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseAppsyncFunctionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AppsyncFunction"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "creates a new resolver for this datasource and API using the given properties."
          },
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 128
          },
          "name": "createResolver",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseResolverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Resolver"
            }
          }
        }
      ],
      "name": "BaseDataSource",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the underlying CFN data source resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 102
          },
          "name": "ds",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.CfnDataSource"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of the data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 98
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 104
          },
          "name": "api",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 105
          },
          "name": "serviceRole",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BaseDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Base properties for an AppSync datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.BaseDataSourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 20
      },
      "name": "BaseDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API to attach this data source to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 24
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "experimental",
            "summary": "the description of the data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 36
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- id of data source",
            "stability": "experimental",
            "summary": "The name of the data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 30
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BaseResolverProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Basic properties for an AppSync resolver."
      },
      "fqn": "@aws-cdk/aws-appsync.BaseResolverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolver.ts",
        "line": 15
      },
      "name": "BaseResolverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "name of the GraphQL field in the given type this resolver is attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 23
          },
          "name": "fieldName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "name of the GraphQL type this resolver is attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 19
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no pipeline resolver configuration\nAn empty array | undefined sets resolver to be of kind, unit",
            "stability": "experimental",
            "summary": "configuration of the pipeline resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 30
          },
          "name": "pipelineConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IAppsyncFunction"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mapping template",
            "stability": "experimental",
            "summary": "The request mapping template for this resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 36
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mapping template",
            "stability": "experimental",
            "summary": "The response mapping template for this resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 42
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.BaseTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "option": "isRequiredList - is this attribute a non-nullable list"
        },
        "stability": "experimental",
        "summary": "Base options for GraphQL Types."
      },
      "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 16
      },
      "name": "BaseTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a list i.e. if true, attribute would be [Type]."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 23
          },
          "name": "isList",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is non-nullable i.e. if true, attribute would be Type!"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 31
          },
          "name": "isRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a non-nullable list i.e. if true, attribute would be [ Type ]! or if isRequired true, attribe would be [ Type! ]!"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 40
          },
          "name": "isRequiredList",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnApiCache": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::ApiCache",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::ApiCache`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnApiCache",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::ApiCache`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 192
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnApiCacheProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 124
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 214
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 230
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnApiCache",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 128
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 219
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apicachingbehavior"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.ApiCachingBehavior`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 153
          },
          "name": "apiCachingBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 159
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-ttl"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.Ttl`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 165
          },
          "name": "ttl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-type"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.Type`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 171
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-atrestencryptionenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.AtRestEncryptionEnabled`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 177
          },
          "name": "atRestEncryptionEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-transitencryptionenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.TransitEncryptionEnabled`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 183
          },
          "name": "transitEncryptionEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnApiCacheProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::ApiCache`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnApiCacheProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 17
      },
      "name": "CfnApiCacheProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apicachingbehavior"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.ApiCachingBehavior`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 23
          },
          "name": "apiCachingBehavior",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 29
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-ttl"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.Ttl`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 35
          },
          "name": "ttl",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-type"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 41
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-atrestencryptionenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.AtRestEncryptionEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 47
          },
          "name": "atRestEncryptionEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-transitencryptionenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiCache.TransitEncryptionEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 53
          },
          "name": "transitEncryptionEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnApiKey": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::ApiKey",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::ApiKey`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnApiKey",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::ApiKey`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 393
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnApiKeyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 327
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 412
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 426
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnApiKey",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 331
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ApiKey"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 355
          },
          "name": "attrApiKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 360
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 417
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 366
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apikeyid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.ApiKeyId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 372
          },
          "name": "apiKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.Description`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 378
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-expires"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.Expires`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 384
          },
          "name": "expires",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnApiKeyProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::ApiKey`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnApiKeyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 241
      },
      "name": "CfnApiKeyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 247
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apikeyid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.ApiKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 253
          },
          "name": "apiKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 259
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-expires"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::ApiKey.Expires`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 265
          },
          "name": "expires",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::DataSource",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::DataSource`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::DataSource`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 681
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnDataSourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 579
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 708
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 728
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDataSource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 583
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DataSourceArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 607
          },
          "name": "attrDataSourceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 612
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 713
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 618
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Name`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 624
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-type"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Type`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 630
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Description`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 636
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-dynamodbconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.DynamoDBConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 642
          },
          "name": "dynamoDbConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DynamoDBConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-elasticsearchconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ElasticsearchConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 648
          },
          "name": "elasticsearchConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.ElasticsearchConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-httpconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.HttpConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 654
          },
          "name": "httpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.HttpConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-lambdaconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.LambdaConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 660
          },
          "name": "lambdaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.LambdaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-relationaldatabaseconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.RelationalDatabaseConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 666
          },
          "name": "relationalDatabaseConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RelationalDatabaseConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-servicerolearn"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ServiceRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 672
          },
          "name": "serviceRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.AuthorizationConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-authorizationconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.AuthorizationConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 738
      },
      "name": "AuthorizationConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-authorizationconfig.html#cfn-appsync-datasource-authorizationconfig-authorizationtype"
            },
            "stability": "external",
            "summary": "`CfnDataSource.AuthorizationConfigProperty.AuthorizationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 743
          },
          "name": "authorizationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-authorizationconfig.html#cfn-appsync-datasource-authorizationconfig-awsiamconfig"
            },
            "stability": "external",
            "summary": "`CfnDataSource.AuthorizationConfigProperty.AwsIamConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 748
          },
          "name": "awsIamConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.AwsIamConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.AwsIamConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-awsiamconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.AwsIamConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 806
      },
      "name": "AwsIamConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-awsiamconfig.html#cfn-appsync-datasource-awsiamconfig-signingregion"
            },
            "stability": "external",
            "summary": "`CfnDataSource.AwsIamConfigProperty.SigningRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 811
          },
          "name": "signingRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-awsiamconfig.html#cfn-appsync-datasource-awsiamconfig-signingservicename"
            },
            "stability": "external",
            "summary": "`CfnDataSource.AwsIamConfigProperty.SigningServiceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 816
          },
          "name": "signingServiceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.DeltaSyncConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-deltasyncconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DeltaSyncConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 873
      },
      "name": "DeltaSyncConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-deltasyncconfig.html#cfn-appsync-datasource-deltasyncconfig-basetablettl"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DeltaSyncConfigProperty.BaseTableTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 878
          },
          "name": "baseTableTtl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-deltasyncconfig.html#cfn-appsync-datasource-deltasyncconfig-deltasynctablename"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DeltaSyncConfigProperty.DeltaSyncTableName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 883
          },
          "name": "deltaSyncTableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-deltasyncconfig.html#cfn-appsync-datasource-deltasyncconfig-deltasynctablettl"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DeltaSyncConfigProperty.DeltaSyncTableTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 888
          },
          "name": "deltaSyncTableTtl",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.DynamoDBConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DynamoDBConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 951
      },
      "name": "DynamoDBConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html#cfn-appsync-datasource-dynamodbconfig-awsregion"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DynamoDBConfigProperty.AwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 956
          },
          "name": "awsRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html#cfn-appsync-datasource-dynamodbconfig-tablename"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DynamoDBConfigProperty.TableName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 966
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html#cfn-appsync-datasource-dynamodbconfig-deltasyncconfig"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DynamoDBConfigProperty.DeltaSyncConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 961
          },
          "name": "deltaSyncConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DeltaSyncConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html#cfn-appsync-datasource-dynamodbconfig-usecallercredentials"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DynamoDBConfigProperty.UseCallerCredentials`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 971
          },
          "name": "useCallerCredentials",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-dynamodbconfig.html#cfn-appsync-datasource-dynamodbconfig-versioned"
            },
            "stability": "external",
            "summary": "`CfnDataSource.DynamoDBConfigProperty.Versioned`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 976
          },
          "name": "versioned",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.ElasticsearchConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-elasticsearchconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.ElasticsearchConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1044
      },
      "name": "ElasticsearchConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-elasticsearchconfig.html#cfn-appsync-datasource-elasticsearchconfig-awsregion"
            },
            "stability": "external",
            "summary": "`CfnDataSource.ElasticsearchConfigProperty.AwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1049
          },
          "name": "awsRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-elasticsearchconfig.html#cfn-appsync-datasource-elasticsearchconfig-endpoint"
            },
            "stability": "external",
            "summary": "`CfnDataSource.ElasticsearchConfigProperty.Endpoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1054
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.HttpConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-httpconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.HttpConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1113
      },
      "name": "HttpConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-httpconfig.html#cfn-appsync-datasource-httpconfig-endpoint"
            },
            "stability": "external",
            "summary": "`CfnDataSource.HttpConfigProperty.Endpoint`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1123
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-httpconfig.html#cfn-appsync-datasource-httpconfig-authorizationconfig"
            },
            "stability": "external",
            "summary": "`CfnDataSource.HttpConfigProperty.AuthorizationConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1118
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.AuthorizationConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.LambdaConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-lambdaconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.LambdaConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1181
      },
      "name": "LambdaConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-lambdaconfig.html#cfn-appsync-datasource-lambdaconfig-lambdafunctionarn"
            },
            "stability": "external",
            "summary": "`CfnDataSource.LambdaConfigProperty.LambdaFunctionArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1186
          },
          "name": "lambdaFunctionArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.RdsHttpEndpointConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RdsHttpEndpointConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1241
      },
      "name": "RdsHttpEndpointConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html#cfn-appsync-datasource-rdshttpendpointconfig-awsregion"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RdsHttpEndpointConfigProperty.AwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1246
          },
          "name": "awsRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html#cfn-appsync-datasource-rdshttpendpointconfig-awssecretstorearn"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RdsHttpEndpointConfigProperty.AwsSecretStoreArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1251
          },
          "name": "awsSecretStoreArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html#cfn-appsync-datasource-rdshttpendpointconfig-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RdsHttpEndpointConfigProperty.DbClusterIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1261
          },
          "name": "dbClusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html#cfn-appsync-datasource-rdshttpendpointconfig-databasename"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RdsHttpEndpointConfigProperty.DatabaseName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1256
          },
          "name": "databaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-rdshttpendpointconfig.html#cfn-appsync-datasource-rdshttpendpointconfig-schema"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RdsHttpEndpointConfigProperty.Schema`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1266
          },
          "name": "schema",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSource.RelationalDatabaseConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-relationaldatabaseconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RelationalDatabaseConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1335
      },
      "name": "RelationalDatabaseConfigProperty",
      "namespace": "CfnDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-relationaldatabaseconfig.html#cfn-appsync-datasource-relationaldatabaseconfig-relationaldatabasesourcetype"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RelationalDatabaseConfigProperty.RelationalDatabaseSourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1345
          },
          "name": "relationalDatabaseSourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-datasource-relationaldatabaseconfig.html#cfn-appsync-datasource-relationaldatabaseconfig-rdshttpendpointconfig"
            },
            "stability": "external",
            "summary": "`CfnDataSource.RelationalDatabaseConfigProperty.RdsHttpEndpointConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1340
          },
          "name": "rdsHttpEndpointConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RdsHttpEndpointConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::DataSource`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnDataSourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 437
      },
      "name": "CfnDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 443
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 449
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-type"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Type`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 455
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 461
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-dynamodbconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.DynamoDBConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 467
          },
          "name": "dynamoDbConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DynamoDBConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-elasticsearchconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ElasticsearchConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 473
          },
          "name": "elasticsearchConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.ElasticsearchConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-httpconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.HttpConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 479
          },
          "name": "httpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.HttpConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-lambdaconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.LambdaConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 485
          },
          "name": "lambdaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.LambdaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-relationaldatabaseconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.RelationalDatabaseConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 491
          },
          "name": "relationalDatabaseConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RelationalDatabaseConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-servicerolearn"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::DataSource.ServiceRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 497
          },
          "name": "serviceRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnFunctionConfiguration": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::FunctionConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::FunctionConfiguration`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::FunctionConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 1659
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1547
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1689
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1709
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFunctionConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1551
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DataSourceName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1575
          },
          "name": "attrDataSourceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1580
          },
          "name": "attrFunctionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FunctionId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1585
          },
          "name": "attrFunctionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1590
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1694
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1596
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-datasourcename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.DataSourceName`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1602
          },
          "name": "dataSourceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-functionversion"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.FunctionVersion`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1608
          },
          "name": "functionVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.Name`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1614
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.Description`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1620
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.RequestMappingTemplate`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1626
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.RequestMappingTemplateS3Location`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1632
          },
          "name": "requestMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ResponseMappingTemplate`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1638
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ResponseMappingTemplateS3Location`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1644
          },
          "name": "responseMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-syncconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.SyncConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1650
          },
          "name": "syncConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration.SyncConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnFunctionConfiguration.LambdaConflictHandlerConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-lambdaconflicthandlerconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration.LambdaConflictHandlerConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1719
      },
      "name": "LambdaConflictHandlerConfigProperty",
      "namespace": "CfnFunctionConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-lambdaconflicthandlerconfig.html#cfn-appsync-functionconfiguration-lambdaconflicthandlerconfig-lambdaconflicthandlerarn"
            },
            "stability": "external",
            "summary": "`CfnFunctionConfiguration.LambdaConflictHandlerConfigProperty.LambdaConflictHandlerArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1724
          },
          "name": "lambdaConflictHandlerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnFunctionConfiguration.SyncConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-syncconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration.SyncConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1778
      },
      "name": "SyncConfigProperty",
      "namespace": "CfnFunctionConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-syncconfig.html#cfn-appsync-functionconfiguration-syncconfig-conflictdetection"
            },
            "stability": "external",
            "summary": "`CfnFunctionConfiguration.SyncConfigProperty.ConflictDetection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1783
          },
          "name": "conflictDetection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-syncconfig.html#cfn-appsync-functionconfiguration-syncconfig-conflicthandler"
            },
            "stability": "external",
            "summary": "`CfnFunctionConfiguration.SyncConfigProperty.ConflictHandler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1788
          },
          "name": "conflictHandler",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-functionconfiguration-syncconfig.html#cfn-appsync-functionconfiguration-syncconfig-lambdaconflicthandlerconfig"
            },
            "stability": "external",
            "summary": "`CfnFunctionConfiguration.SyncConfigProperty.LambdaConflictHandlerConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1793
          },
          "name": "lambdaConflictHandlerConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration.LambdaConflictHandlerConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnFunctionConfigurationProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::FunctionConfiguration`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1404
      },
      "name": "CfnFunctionConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1410
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-datasourcename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.DataSourceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1416
          },
          "name": "dataSourceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-functionversion"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.FunctionVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1422
          },
          "name": "functionVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1428
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-description"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1434
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.RequestMappingTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1440
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.RequestMappingTemplateS3Location`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1446
          },
          "name": "requestMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ResponseMappingTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1452
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.ResponseMappingTemplateS3Location`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1458
          },
          "name": "responseMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-syncconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::FunctionConfiguration.SyncConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1464
          },
          "name": "syncConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnFunctionConfiguration.SyncConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::GraphQLApi",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::GraphQLApi`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::GraphQLApi`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 2073
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApiProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1978
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2098
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2116
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnGraphQLApi",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1982
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ApiId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2006
          },
          "name": "attrApiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2011
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "GraphQLUrl"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2016
          },
          "name": "attrGraphQlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2103
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-tags"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2052
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-authenticationtype"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.AuthenticationType`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2022
          },
          "name": "authenticationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.Name`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2028
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-additionalauthenticationproviders"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.AdditionalAuthenticationProviders`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2034
          },
          "name": "additionalAuthenticationProviders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.AdditionalAuthenticationProviderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-logconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.LogConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2040
          },
          "name": "logConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.LogConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-openidconnectconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.OpenIDConnectConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2046
          },
          "name": "openIdConnectConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.OpenIDConnectConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-userpoolconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.UserPoolConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2058
          },
          "name": "userPoolConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.UserPoolConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-xrayenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.XrayEnabled`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2064
          },
          "name": "xrayEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi.AdditionalAuthenticationProviderProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-additionalauthenticationprovider.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.AdditionalAuthenticationProviderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2126
      },
      "name": "AdditionalAuthenticationProviderProperty",
      "namespace": "CfnGraphQLApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-additionalauthenticationprovider.html#cfn-appsync-graphqlapi-additionalauthenticationprovider-authenticationtype"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.AdditionalAuthenticationProviderProperty.AuthenticationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2131
          },
          "name": "authenticationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-additionalauthenticationprovider.html#cfn-appsync-graphqlapi-additionalauthenticationprovider-openidconnectconfig"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.AdditionalAuthenticationProviderProperty.OpenIDConnectConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2136
          },
          "name": "openIdConnectConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.OpenIDConnectConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-additionalauthenticationprovider.html#cfn-appsync-graphqlapi-additionalauthenticationprovider-userpoolconfig"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.AdditionalAuthenticationProviderProperty.UserPoolConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2141
          },
          "name": "userPoolConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.CognitoUserPoolConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi.CognitoUserPoolConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-cognitouserpoolconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.CognitoUserPoolConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2202
      },
      "name": "CognitoUserPoolConfigProperty",
      "namespace": "CfnGraphQLApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-cognitouserpoolconfig.html#cfn-appsync-graphqlapi-cognitouserpoolconfig-appidclientregex"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.CognitoUserPoolConfigProperty.AppIdClientRegex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2207
          },
          "name": "appIdClientRegex",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-cognitouserpoolconfig.html#cfn-appsync-graphqlapi-cognitouserpoolconfig-awsregion"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.CognitoUserPoolConfigProperty.AwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2212
          },
          "name": "awsRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-cognitouserpoolconfig.html#cfn-appsync-graphqlapi-cognitouserpoolconfig-userpoolid"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.CognitoUserPoolConfigProperty.UserPoolId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2217
          },
          "name": "userPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi.LogConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.LogConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2277
      },
      "name": "LogConfigProperty",
      "namespace": "CfnGraphQLApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html#cfn-appsync-graphqlapi-logconfig-cloudwatchlogsrolearn"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.LogConfigProperty.CloudWatchLogsRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2282
          },
          "name": "cloudWatchLogsRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html#cfn-appsync-graphqlapi-logconfig-excludeverbosecontent"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.LogConfigProperty.ExcludeVerboseContent`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2287
          },
          "name": "excludeVerboseContent",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html#cfn-appsync-graphqlapi-logconfig-fieldloglevel"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.LogConfigProperty.FieldLogLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2292
          },
          "name": "fieldLogLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi.OpenIDConnectConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-openidconnectconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.OpenIDConnectConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2352
      },
      "name": "OpenIDConnectConfigProperty",
      "namespace": "CfnGraphQLApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-openidconnectconfig.html#cfn-appsync-graphqlapi-openidconnectconfig-authttl"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.OpenIDConnectConfigProperty.AuthTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2357
          },
          "name": "authTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-openidconnectconfig.html#cfn-appsync-graphqlapi-openidconnectconfig-clientid"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.OpenIDConnectConfigProperty.ClientId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2362
          },
          "name": "clientId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-openidconnectconfig.html#cfn-appsync-graphqlapi-openidconnectconfig-iatttl"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.OpenIDConnectConfigProperty.IatTTL`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2367
          },
          "name": "iatTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-openidconnectconfig.html#cfn-appsync-graphqlapi-openidconnectconfig-issuer"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.OpenIDConnectConfigProperty.Issuer`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2372
          },
          "name": "issuer",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApi.UserPoolConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-userpoolconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.UserPoolConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2435
      },
      "name": "UserPoolConfigProperty",
      "namespace": "CfnGraphQLApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-userpoolconfig.html#cfn-appsync-graphqlapi-userpoolconfig-appidclientregex"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.UserPoolConfigProperty.AppIdClientRegex`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2440
          },
          "name": "appIdClientRegex",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-userpoolconfig.html#cfn-appsync-graphqlapi-userpoolconfig-awsregion"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.UserPoolConfigProperty.AwsRegion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2445
          },
          "name": "awsRegion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-userpoolconfig.html#cfn-appsync-graphqlapi-userpoolconfig-defaultaction"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.UserPoolConfigProperty.DefaultAction`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2450
          },
          "name": "defaultAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-userpoolconfig.html#cfn-appsync-graphqlapi-userpoolconfig-userpoolid"
            },
            "stability": "external",
            "summary": "`CfnGraphQLApi.UserPoolConfigProperty.UserPoolId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2455
          },
          "name": "userPoolId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLApiProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::GraphQLApi`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 1855
      },
      "name": "CfnGraphQLApiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-authenticationtype"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.AuthenticationType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1861
          },
          "name": "authenticationType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-name"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1867
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-additionalauthenticationproviders"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.AdditionalAuthenticationProviders`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1873
          },
          "name": "additionalAuthenticationProviders",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.AdditionalAuthenticationProviderProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-logconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.LogConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1879
          },
          "name": "logConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.LogConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-openidconnectconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.OpenIDConnectConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1885
          },
          "name": "openIdConnectConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.OpenIDConnectConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-tags"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1891
          },
          "name": "tags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/core.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-userpoolconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.UserPoolConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1897
          },
          "name": "userPoolConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnGraphQLApi.UserPoolConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-xrayenabled"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLApi.XrayEnabled`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 1903
          },
          "name": "xrayEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLSchema": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::GraphQLSchema",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::GraphQLSchema`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLSchema",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::GraphQLSchema`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 2646
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnGraphQLSchemaProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2596
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2662
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2675
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnGraphQLSchema",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2600
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2667
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2625
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definition"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.Definition`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2631
          },
          "name": "definition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definitions3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.DefinitionS3Location`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2637
          },
          "name": "definitionS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnGraphQLSchemaProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::GraphQLSchema`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnGraphQLSchemaProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2519
      },
      "name": "CfnGraphQLSchemaProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2525
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definition"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.Definition`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2531
          },
          "name": "definition",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definitions3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::GraphQLSchema.DefinitionS3Location`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2537
          },
          "name": "definitionS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolver": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AppSync::Resolver",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::AppSync::Resolver`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolver",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AppSync::Resolver`."
        },
        "locationInModule": {
          "filename": "lib/appsync.generated.ts",
          "line": 2965
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnResolverProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2846
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2995
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3017
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolver",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2850
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "FieldName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2874
          },
          "name": "attrFieldName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2879
          },
          "name": "attrResolverArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TypeName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2884
          },
          "name": "attrTypeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3000
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ApiId`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2890
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-fieldname"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.FieldName`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2896
          },
          "name": "fieldName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-typename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.TypeName`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2902
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-cachingconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.CachingConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2908
          },
          "name": "cachingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.CachingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-datasourcename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.DataSourceName`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2914
          },
          "name": "dataSourceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-kind"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.Kind`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2920
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-pipelineconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.PipelineConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2926
          },
          "name": "pipelineConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.PipelineConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.RequestMappingTemplate`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2932
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.RequestMappingTemplateS3Location`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2938
          },
          "name": "requestMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ResponseMappingTemplate`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2944
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ResponseMappingTemplateS3Location`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2950
          },
          "name": "responseMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-syncconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.SyncConfig`."
          },
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2956
          },
          "name": "syncConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.SyncConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolver.CachingConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-cachingconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolver.CachingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 3027
      },
      "name": "CachingConfigProperty",
      "namespace": "CfnResolver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-cachingconfig.html#cfn-appsync-resolver-cachingconfig-cachingkeys"
            },
            "stability": "external",
            "summary": "`CfnResolver.CachingConfigProperty.CachingKeys`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3032
          },
          "name": "cachingKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-cachingconfig.html#cfn-appsync-resolver-cachingconfig-ttl"
            },
            "stability": "external",
            "summary": "`CfnResolver.CachingConfigProperty.Ttl`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3037
          },
          "name": "ttl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolver.LambdaConflictHandlerConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-lambdaconflicthandlerconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolver.LambdaConflictHandlerConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 3094
      },
      "name": "LambdaConflictHandlerConfigProperty",
      "namespace": "CfnResolver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-lambdaconflicthandlerconfig.html#cfn-appsync-resolver-lambdaconflicthandlerconfig-lambdaconflicthandlerarn"
            },
            "stability": "external",
            "summary": "`CfnResolver.LambdaConflictHandlerConfigProperty.LambdaConflictHandlerArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3099
          },
          "name": "lambdaConflictHandlerArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolver.PipelineConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-pipelineconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolver.PipelineConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 3153
      },
      "name": "PipelineConfigProperty",
      "namespace": "CfnResolver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-pipelineconfig.html#cfn-appsync-resolver-pipelineconfig-functions"
            },
            "stability": "external",
            "summary": "`CfnResolver.PipelineConfigProperty.Functions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3158
          },
          "name": "functions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolver.SyncConfigProperty": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolver.SyncConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 3212
      },
      "name": "SyncConfigProperty",
      "namespace": "CfnResolver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-conflictdetection"
            },
            "stability": "external",
            "summary": "`CfnResolver.SyncConfigProperty.ConflictDetection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3217
          },
          "name": "conflictDetection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-conflicthandler"
            },
            "stability": "external",
            "summary": "`CfnResolver.SyncConfigProperty.ConflictHandler`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3222
          },
          "name": "conflictHandler",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-lambdaconflicthandlerconfig"
            },
            "stability": "external",
            "summary": "`CfnResolver.SyncConfigProperty.LambdaConflictHandlerConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 3227
          },
          "name": "lambdaConflictHandlerConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.LambdaConflictHandlerConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.CfnResolverProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::AppSync::Resolver`."
      },
      "fqn": "@aws-cdk/aws-appsync.CfnResolverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync.generated.ts",
        "line": 2686
      },
      "name": "CfnResolverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-apiid"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ApiId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2692
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-fieldname"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.FieldName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2698
          },
          "name": "fieldName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-typename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.TypeName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2704
          },
          "name": "typeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-cachingconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.CachingConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2710
          },
          "name": "cachingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.CachingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-datasourcename"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.DataSourceName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2716
          },
          "name": "dataSourceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-kind"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.Kind`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2722
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-pipelineconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.PipelineConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2728
          },
          "name": "pipelineConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.PipelineConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.RequestMappingTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2734
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.RequestMappingTemplateS3Location`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2740
          },
          "name": "requestMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplate"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ResponseMappingTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2746
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplates3location"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.ResponseMappingTemplateS3Location`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2752
          },
          "name": "responseMappingTemplateS3Location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-syncconfig"
            },
            "stability": "external",
            "summary": "`AWS::AppSync::Resolver.SyncConfig`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync.generated.ts",
            "line": 2758
          },
          "name": "syncConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnResolver.SyncConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.DataSourceOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Optional configuration for data sources."
      },
      "fqn": "@aws-cdk/aws-appsync.DataSourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi-base.ts",
        "line": 12
      },
      "name": "DataSourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No description",
            "stability": "experimental",
            "summary": "The description of the data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 25
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated by cdk given the id",
            "stability": "experimental",
            "summary": "The name of the data source, overrides the id given by cdk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 18
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.Directive": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "i.e. @aws_iam or @aws_subscribe",
        "stability": "experimental",
        "summary": "Directives for types."
      },
      "fqn": "@aws-cdk/aws-appsync.Directive",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-base.ts",
        "line": 191
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add the @aws_api_key directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 209
          },
          "name": "apiKey",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add the @aws_auth or @aws_cognito_user_pools directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 218
          },
          "name": "cognito",
          "parameters": [
            {
              "docs": {
                "summary": "the groups to allow access to."
              },
              "name": "groups",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add a custom directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 250
          },
          "name": "custom",
          "parameters": [
            {
              "docs": {
                "summary": "- the directive statement to append."
              },
              "name": "statement",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add the @aws_iam directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 195
          },
          "name": "iam",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add the @aws_oidc directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 202
          },
          "name": "oidc",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Only use for top level Subscription type.",
            "stability": "experimental",
            "summary": "Add the @aws_subscribe directive."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 234
          },
          "name": "subscribe",
          "parameters": [
            {
              "docs": {
                "summary": "the mutation fields to link to."
              },
              "name": "mutations",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Directive"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the directive statement."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 299
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Directive",
      "properties": [
        {
          "docs": {
            "default": "- not an authorization directive",
            "stability": "experimental",
            "summary": "The authorization type of this directive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 259
          },
          "name": "mode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
          }
        },
        {
          "docs": {
            "default": "- not a subscription directive",
            "stability": "experimental",
            "summary": "Mutation fields for a subscription directive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 266
          },
          "name": "mutationFields",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the authorization modes for this intermediate type."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 276
          },
          "name": "modes",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.DynamoDbDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BackedDataSource",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync datasource backed by a DynamoDB table."
      },
      "fqn": "@aws-cdk/aws-appsync.DynamoDbDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 207
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.DynamoDbDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 206
      },
      "name": "DynamoDbDataSource"
    },
    "@aws-cdk/aws-appsync.DynamoDbDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync DynamoDB datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.DynamoDbDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BackedDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 184
      },
      "name": "DynamoDbDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The DynamoDB table backing this data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 188
          },
          "name": "table",
          "type": {
            "fqn": "@aws-cdk/aws-dynamodb.ITable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Specify whether this DS is read only or has read and write permissions to the DynamoDB table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 194
          },
          "name": "readOnlyAccess",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "use credentials of caller to access DynamoDB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 200
          },
          "name": "useCallerCredentials",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.EnumType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Enum Types are abstract types that includes a set of fields that represent the strings this type can create."
      },
      "fqn": "@aws-cdk/aws-appsync.EnumType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-intermediate.ts",
          "line": 437
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.EnumTypeOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IIntermediateType"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 423
      },
      "methods": [
        {
          "docs": {
            "remarks": "To add a field to this Enum Type, you must only configure\naddField with the fieldName options.",
            "stability": "experimental",
            "summary": "Add a field to this Enum Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 475
          },
          "name": "addField",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to add a field."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create an GraphQL Type representing this Enum Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 446
          },
          "name": "attribute",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this enum type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 458
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "EnumType",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 431
          },
          "name": "definition",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 427
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the authorization modes for this intermediate type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 435
          },
          "name": "modes",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.EnumTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an Enum Type."
      },
      "fqn": "@aws-cdk/aws-appsync.EnumTypeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 410
      },
      "name": "EnumTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 414
          },
          "name": "definition",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ExtendedDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "remarks": "Should not be used directly.",
        "stability": "experimental",
        "summary": "props used by implementations of BaseDataSource to provide configuration."
      },
      "fqn": "@aws-cdk/aws-appsync.ExtendedDataSourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 54
      },
      "name": "ExtendedDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the type of the AppSync datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 58
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No config",
            "stability": "experimental",
            "summary": "configuration for DynamoDB Datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 64
          },
          "name": "dynamoDbConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.DynamoDBConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No config",
            "stability": "experimental",
            "summary": "configuration for Elasticsearch Datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 70
          },
          "name": "elasticsearchConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.ElasticsearchConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No config",
            "stability": "experimental",
            "summary": "configuration for HTTP Datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 76
          },
          "name": "httpConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.HttpConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No config",
            "stability": "experimental",
            "summary": "configuration for Lambda Datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 82
          },
          "name": "lambdaConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.LambdaConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No config",
            "stability": "experimental",
            "summary": "configuration for RDS Datasource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 88
          },
          "name": "relationalDatabaseConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-appsync.CfnDataSource.RelationalDatabaseConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ExtendedResolverProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Additional property for an AppSync resolver for data source reference."
      },
      "fqn": "@aws-cdk/aws-appsync.ExtendedResolverProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseResolverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolver.ts",
        "line": 48
      },
      "name": "ExtendedResolverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No datasource",
            "stability": "experimental",
            "summary": "The data source this resolver is using."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 54
          },
          "name": "dataSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.BaseDataSource"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.Field": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.GraphqlType",
      "docs": {
        "stability": "experimental",
        "summary": "Fields build upon Graphql Types and provide typing and arguments."
      },
      "fqn": "@aws-cdk/aws-appsync.Field",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-field.ts",
          "line": 377
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.FieldOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IField"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 369
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the args string of this resolvable field."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 391
          },
          "name": "argsToString",
          "overrides": "@aws-cdk/aws-appsync.GraphqlType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the directives for this field."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 400
          },
          "name": "directivesToString",
          "overrides": "@aws-cdk/aws-appsync.GraphqlType",
          "parameters": [
            {
              "name": "modes",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Field",
      "properties": [
        {
          "docs": {
            "default": "- no arguments",
            "stability": "experimental",
            "summary": "The options for this field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 375
          },
          "name": "fieldOptions",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.FieldLogLevel": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "log-level for fields in AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.FieldLogLevel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 175
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "No logging."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Error logging."
          },
          "name": "ERROR"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "All logging."
          },
          "name": "ALL"
        }
      ],
      "name": "FieldLogLevel"
    },
    "@aws-cdk/aws-appsync.FieldOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "options": "args - the variables and types that define the arguments\n\ni.e. { string: GraphqlType, string: GraphqlType }"
        },
        "stability": "experimental",
        "summary": "Properties for configuring a field."
      },
      "fqn": "@aws-cdk/aws-appsync.FieldOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 342
      },
      "name": "FieldOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The return type for this field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 346
          },
          "name": "returnType",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.GraphqlType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no arguments",
            "remarks": "i.e. type Example (first: String second: String) {}\n- where 'first' and 'second' are key values for args\nand 'String' is the GraphqlType",
            "stability": "experimental",
            "summary": "The arguments for this field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 356
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.GraphqlType"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no directives",
            "stability": "experimental",
            "summary": "the directives for this field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 362
          },
          "name": "directives",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Directive"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlApi": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.GraphqlApiBase",
      "docs": {
        "custom": {
          "resource": "AWS::AppSync::GraphQLApi"
        },
        "stability": "experimental",
        "summary": "An AppSync GraphQL API."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlApi",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/graphqlapi.ts",
          "line": 404
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlApiProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 337
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import a GraphQL API through this function."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 345
          },
          "name": "fromGraphqlApiAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "scope."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "GraphQL API Attributes of an API."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.GraphqlApiAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "type Mutation {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a mutation field to the schema's Mutation. CDK will create an Object Type called 'Mutation'. For example,."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 629
          },
          "name": "addMutation",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the Mutation."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this Mutation."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "remarks": "type Query {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a query field to the schema's Query. CDK will create an Object Type called 'Query'. For example,."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 614
          },
          "name": "addQuery",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the query."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this query."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add schema dependency to a given construct."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 515
          },
          "name": "addSchemaDependency",
          "overrides": "@aws-cdk/aws-appsync.GraphqlApiBase",
          "parameters": [
            {
              "docs": {
                "summary": "the dependee."
              },
              "name": "construct",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "remarks": "type Subscription {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a subscription field to the schema's Subscription. CDK will create an Object Type called 'Subscription'. For example,."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 644
          },
          "name": "addSubscription",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the Subscription."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this Subscription."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "default": "- ''",
            "remarks": "Will always result\nin a newline.",
            "stability": "experimental",
            "summary": "Escape hatch to append to Schema as desired."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 588
          },
          "name": "addToSchema",
          "parameters": [
            {
              "docs": {
                "summary": "the addition to add to schema."
              },
              "name": "addition",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the delimiter between schema and addition."
              },
              "name": "delimiter",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add type to the schema."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 599
          },
          "name": "addType",
          "parameters": [
            {
              "docs": {
                "summary": "the intermediate type to add to the schema."
              },
              "name": "type",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an IAM policy statement associated with this GraphQLApi to an IAM principal's policy."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 451
          },
          "name": "grant",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The set of resources to allow (i.e. ...:[region]:[accountId]:apis/GraphQLId/...)."
              },
              "name": "resources",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.IamResource"
              }
            },
            {
              "docs": {
                "summary": "The actions that should be granted to the principal (i.e. appsync:graphql )."
              },
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an IAM policy statement for Mutation access to this GraphQLApi to an IAM principal's policy."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 467
          },
          "name": "grantMutation",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The fields to grant access to that are Mutations (leave blank for all)."
              },
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an IAM policy statement for Query access to this GraphQLApi to an IAM principal's policy."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 478
          },
          "name": "grantQuery",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The fields to grant access to that are Queries (leave blank for all)."
              },
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds an IAM policy statement for Subscription access to this GraphQLApi to an IAM principal's policy."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 489
          },
          "name": "grantSubscription",
          "parameters": [
            {
              "docs": {
                "summary": "The principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "summary": "The fields to grant access to that are Subscriptions (leave blank for all)."
              },
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        }
      ],
      "name": "GraphqlApi",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "an unique AWS AppSync GraphQL API identifier i.e. 'lxz775lwdrgcndgz3nurvac7oa'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 364
          },
          "name": "apiId",
          "overrides": "@aws-cdk/aws-appsync.GraphqlApiBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the ARN of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 369
          },
          "name": "arn",
          "overrides": "@aws-cdk/aws-appsync.GraphqlApiBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "GraphQlUrl"
            },
            "stability": "experimental",
            "summary": "the URL of the endpoint created by AppSync."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 376
          },
          "name": "graphqlUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The Authorization Types for this GraphQL Api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 391
          },
          "name": "modes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 381
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the schema attached to this api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 386
          },
          "name": "schema",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.Schema"
          }
        },
        {
          "docs": {
            "default": "- no api key",
            "stability": "experimental",
            "summary": "the configured API key, if present."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 398
          },
          "name": "apiKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlApiAttributes": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Attributes for GraphQL imports."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlApiAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 318
      },
      "name": "GraphqlApiAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "an unique AWS AppSync GraphQL API identifier i.e. 'lxz775lwdrgcndgz3nurvac7oa'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 323
          },
          "name": "graphqlApiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- autogenerated arn",
            "stability": "experimental",
            "summary": "the arn for the GraphQL Api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 329
          },
          "name": "graphqlApiArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlApiBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "Base Class for GraphQL API."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlApiBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 126
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IGraphqlApi"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graphqlapi-base.ts",
        "line": 129
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "add a new DynamoDB data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 164
          },
          "name": "addDynamoDbDataSource",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The DynamoDB table backing this data source."
              },
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-dynamodb.ITable"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.DynamoDbDataSource"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "add a new http data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 180
          },
          "name": "addHttpDataSource",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The http endpoint."
              },
              "name": "endpoint",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.HttpDataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.HttpDataSource"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "add a new Lambda data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 197
          },
          "name": "addLambdaDataSource",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The Lambda function to call to interact with this data source."
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.LambdaDataSource"
            }
          }
        },
        {
          "docs": {
            "remarks": "Useful for pipeline resolvers\nand for backend changes that don't require a data source.",
            "stability": "experimental",
            "summary": "add a new dummy data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 149
          },
          "name": "addNoneDataSource",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.NoneDataSource"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "add a new Rds data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 214
          },
          "name": "addRdsDataSource",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The serverless cluster to interact with this data source."
              },
              "name": "serverlessCluster",
              "type": {
                "fqn": "@aws-cdk/aws-rds.IServerlessCluster"
              }
            },
            {
              "docs": {
                "summary": "The secret store that contains the username and password for the serverless cluster."
              },
              "name": "secretStore",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
              }
            },
            {
              "docs": {
                "summary": "The optional name of the database to use within the cluster."
              },
              "name": "databaseName",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.RdsDataSource"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add schema dependency if not imported."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 246
          },
          "name": "addSchemaDependency",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "docs": {
                "summary": "the dependee."
              },
              "name": "construct",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "creates a new resolver for this datasource and API using the given properties."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 234
          },
          "name": "createResolver",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ExtendedResolverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Resolver"
            }
          }
        }
      ],
      "name": "GraphqlApiBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "an unique AWS AppSync GraphQL API identifier i.e. 'lxz775lwdrgcndgz3nurvac7oa'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 135
          },
          "name": "apiId",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the ARN of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 140
          },
          "name": "arn",
          "overrides": "@aws-cdk/aws-appsync.IGraphqlApi",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlApiProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync GraphQL API."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlApiProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 218
      },
      "name": "GraphqlApiProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the name of the GraphQL API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 222
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- API Key authorization",
            "stability": "experimental",
            "summary": "Optional authorization configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 229
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AuthorizationConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "experimental",
            "summary": "Logging configuration for this api."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 236
          },
          "name": "logConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.LogConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- schema will be generated code-first (i.e. addType, addObjectType, etc.)",
            "remarks": "Schema.fromFile(filePath: string) allows schema definition through schema.graphql file",
            "stability": "experimental",
            "summary": "GraphQL schema definition. Specify how you want to define your schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 247
          },
          "name": "schema",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.Schema"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "A flag indicating whether or not X-Ray tracing is enabled for the GraphQL API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 253
          },
          "name": "xrayEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "GraphQL Types are the\nbuilding blocks for object types, queries, mutations, etc. They are\ntypes like String, Int, Id or even Object Types you create.\n\ni.e. `String`, `String!`, `[String]`, `[String!]`, `[String]!`\n\nGraphQL Types are used to define the entirety of schema.",
        "stability": "experimental",
        "summary": "The GraphQL Types in AppSync's GraphQL."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-field.ts",
          "line": 297
        },
        "parameters": [
          {
            "name": "type",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Type"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlTypeOptions"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IField"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 70
      },
      "methods": [
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `YYYY-MM-DD`. It accepts time zone offsets.",
            "stability": "experimental",
            "summary": "`AWSDate` scalar type represents a valid extended `ISO 8601 Date` string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 139
          },
          "name": "awsDate",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `YYYY-MM-DDThh:mm:ss.sssZ`. It accepts time zone offsets.",
            "stability": "experimental",
            "summary": "`AWSDateTime` scalar type represents a valid extended `ISO 8601 DateTime` string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 165
          },
          "name": "awsDateTime",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSEmail` scalar type represents an email address string (i.e.`username@example.com`)."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 189
          },
          "name": "awsEmail",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSIPAddress` scalar type respresents a valid `IPv4` of `IPv6` address string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 237
          },
          "name": "awsIpAddress",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSJson` scalar type represents a JSON string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 200
          },
          "name": "awsJson",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The number can specify a country code at the beginning, but is not required for US phone numbers.",
            "stability": "experimental",
            "summary": "`AWSPhone` scalar type represents a valid phone number. Phone numbers maybe be whitespace delimited or hyphenated."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 226
          },
          "name": "awsPhone",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `hh:mm:ss.sss`. It accepts time zone offsets.",
            "stability": "experimental",
            "summary": "`AWSTime` scalar type represents a valid extended `ISO 8601 Time` string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 152
          },
          "name": "awsTime",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Timestamps are serialized and deserialized as numbers.",
            "stability": "experimental",
            "summary": "`AWSTimestamp` scalar type represents the number of seconds since `1970-01-01T00:00Z`."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 178
          },
          "name": "awsTimestamp",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "URLs wihtout schemes or contain double slashes are considered invalid.",
            "stability": "experimental",
            "summary": "`AWSURL` scalar type represetns a valid URL string."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 213
          },
          "name": "awsUrl",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Boolean` scalar type is a boolean value: true or false."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 125
          },
          "name": "boolean",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Float` scalar type is a signed double-precision fractional value."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 114
          },
          "name": "float",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Often used as a key for a cache and not intended to be human-readable.",
            "stability": "experimental",
            "summary": "`ID` scalar type is a unique identifier. `ID` type is serialized similar to `String`."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 81
          },
          "name": "id",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Int` scalar type is a signed non-fractional numerical value."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 103
          },
          "name": "int",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "an intermediate type to be added as an attribute (i.e. an interface or an object type)."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 251
          },
          "name": "intermediate",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList - intermediateType."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.GraphqlTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`String` scalar type is a free-form human-readable text."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 92
          },
          "name": "string",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the arguments for this field."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 323
          },
          "name": "argsToString",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the directives for this field."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 330
          },
          "name": "directivesToString",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "parameters": [
            {
              "name": "_modes",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string for this attribute."
          },
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 308
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "GraphqlType",
      "properties": [
        {
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a list i.e. if true, attribute would be `[Type]`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 269
          },
          "name": "isList",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is non-nullable i.e. if true, attribute would be `Type!` and this attribute must always have a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 278
          },
          "name": "isRequired",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a non-nullable list i.e. if true, attribute would be `[ Type ]!` and this attribute's list must always have a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 287
          },
          "name": "isRequiredList",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the type of attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 261
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.Type"
          }
        },
        {
          "docs": {
            "default": "- no intermediate type",
            "stability": "experimental",
            "summary": "the intermediate type linked to this attribute (i.e. an interface or an object)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 295
          },
          "name": "intermediateType",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.GraphqlTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "option": "objectType - the object type linked to this attribute"
        },
        "stability": "experimental",
        "summary": "Options for GraphQL Types."
      },
      "fqn": "@aws-cdk/aws-appsync.GraphqlTypeOptions",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseTypeOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 53
      },
      "name": "GraphqlTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no intermediate type",
            "stability": "experimental",
            "summary": "the intermediate type linked to this attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 58
          },
          "name": "intermediateType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.HttpDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BackedDataSource",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync datasource backed by a http endpoint."
      },
      "fqn": "@aws-cdk/aws-appsync.HttpDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 261
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.HttpDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 260
      },
      "name": "HttpDataSource"
    },
    "@aws-cdk/aws-appsync.HttpDataSourceOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Optional configuration for Http data sources."
      },
      "fqn": "@aws-cdk/aws-appsync.HttpDataSourceOptions",
      "interfaces": [
        "@aws-cdk/aws-appsync.DataSourceOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi-base.ts",
        "line": 31
      },
      "name": "HttpDataSourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "The authorization config in case the HTTP endpoint requires authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 37
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AwsIamConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.HttpDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync http datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.HttpDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 242
      },
      "name": "HttpDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The http endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 246
          },
          "name": "endpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "experimental",
            "summary": "The authorization config in case the HTTP endpoint requires authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 254
          },
          "name": "authorizationConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.AwsIamConfig"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IAppsyncFunction": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for AppSync Functions."
      },
      "fqn": "@aws-cdk/aws-appsync.IAppsyncFunction",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/appsync-function.ts",
        "line": 63
      },
      "name": "IAppsyncFunction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "the ARN of the AppSync function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 75
          },
          "name": "functionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "the name of this AppSync Function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/appsync-function.ts",
            "line": 69
          },
          "name": "functionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IField": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "A Graphql Field."
      },
      "fqn": "@aws-cdk/aws-appsync.IField",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-base.ts",
        "line": 9
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Generate the arguments for this field."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 64
          },
          "name": "argsToString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no authorization modes",
            "stability": "experimental",
            "summary": "Generate the directives for this field."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 73
          },
          "name": "directivesToString",
          "parameters": [
            {
              "docs": {
                "summary": "the authorization modes of the graphql api."
              },
              "name": "modes",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string for this attribute."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 59
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IField",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a list i.e. if true, attribute would be `[Type]`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 21
          },
          "name": "isList",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "property determining if this attribute is non-nullable i.e. if true, attribute would be `Type!` and this attribute must always have a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 30
          },
          "name": "isRequired",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "property determining if this attribute is a non-nullable list i.e. if true, attribute would be `[ Type ]!` and this attribute's list must always have a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 39
          },
          "name": "isRequiredList",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the type of attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 13
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.Type"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- not a resolvable field",
            "stability": "experimental",
            "summary": "The options to make this field resolvable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 46
          },
          "name": "fieldOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no intermediate type",
            "stability": "experimental",
            "summary": "the intermediate type linked to this attribute (i.e. an interface or an object)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 54
          },
          "name": "intermediateType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IGraphqlApi": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Interface for GraphQL."
      },
      "fqn": "@aws-cdk/aws-appsync.IGraphqlApi",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi-base.ts",
        "line": 43
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "add a new DynamoDB data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 76
          },
          "name": "addDynamoDbDataSource",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The DynamoDB table backing this data source."
              },
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-dynamodb.ITable"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.DynamoDbDataSource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "add a new http data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 85
          },
          "name": "addHttpDataSource",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The http endpoint."
              },
              "name": "endpoint",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.HttpDataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.HttpDataSource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "add a new Lambda data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 94
          },
          "name": "addLambdaDataSource",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The Lambda function to call to interact with this data source."
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.LambdaDataSource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Useful for pipeline resolvers\nand for backend changes that don't require a data source.",
            "stability": "experimental",
            "summary": "add a new dummy data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 67
          },
          "name": "addNoneDataSource",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.NoneDataSource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "add a new Rds data source to this API."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 105
          },
          "name": "addRdsDataSource",
          "parameters": [
            {
              "docs": {
                "summary": "The data source's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The serverless cluster to interact with this data source."
              },
              "name": "serverlessCluster",
              "type": {
                "fqn": "@aws-cdk/aws-rds.IServerlessCluster"
              }
            },
            {
              "docs": {
                "summary": "The secret store that contains the username and password for the serverless cluster."
              },
              "name": "secretStore",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
              }
            },
            {
              "docs": {
                "summary": "The optional name of the database to use within the cluster."
              },
              "name": "databaseName",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The optional configuration for this data source."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.DataSourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.RdsDataSource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add schema dependency if not imported."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 123
          },
          "name": "addSchemaDependency",
          "parameters": [
            {
              "docs": {
                "summary": "the dependee."
              },
              "name": "construct",
              "type": {
                "fqn": "@aws-cdk/core.CfnResource"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "creates a new resolver for this datasource and API using the given properties."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 116
          },
          "name": "createResolver",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ExtendedResolverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Resolver"
            }
          }
        }
      ],
      "name": "IGraphqlApi",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "an unique AWS AppSync GraphQL API identifier i.e. 'lxz775lwdrgcndgz3nurvac7oa'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 51
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "the ARN of the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi-base.ts",
            "line": 58
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IIntermediateType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Intermediate Types are types that includes a certain set of fields that define the entirety of your schema."
      },
      "fqn": "@aws-cdk/aws-appsync.IIntermediateType",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-base.ts",
        "line": 104
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add a field to this Intermediate Type."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 169
          },
          "name": "addField",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Create an GraphQL Type representing this Intermediate Type."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 159
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute - isList - isRequired - isRequiredList."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this object type."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 164
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IIntermediateType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 113
          },
          "name": "definition",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the name of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 108
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no directives",
            "stability": "experimental",
            "summary": "the directives for this object type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 127
          },
          "name": "directives",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Directive"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no interface types",
            "stability": "experimental",
            "summary": "The Interface Types this Intermediate Type implements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 120
          },
          "name": "interfaceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.InterfaceType"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no intermediate type",
            "stability": "experimental",
            "summary": "the intermediate type linked to this attribute (i.e. an interface or an object)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 140
          },
          "name": "intermediateType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The resolvers linked to this data source."
          },
          "locationInModule": {
            "filename": "lib/schema-base.ts",
            "line": 132
          },
          "name": "resolvers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Resolver"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IamResource": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "A class used to generate resource arns for AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.IamResource",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 259
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the resource names that accepts all types: `*`."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 290
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IamResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the resource names given custom arns."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 267
          },
          "name": "custom",
          "parameters": [
            {
              "docs": {
                "remarks": "Example: custom('/types/Query/fields/getExample')",
                "summary": "The custom arns that need to be permissioned."
              },
              "name": "arns",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IamResource"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the resource names given a type and fields."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 282
          },
          "name": "ofType",
          "parameters": [
            {
              "docs": {
                "summary": "The type that needs to be allowed."
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Example: ofType('Query', 'GetExample')",
                "summary": "The fields that need to be allowed, if empty grant permissions to ALL fields."
              },
              "name": "fields",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IamResource"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the Resource ARN."
          },
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 305
          },
          "name": "resourceArns",
          "parameters": [
            {
              "docs": {
                "summary": "The GraphQL API to give permissions."
              },
              "name": "api",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.GraphqlApi"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IamResource"
    },
    "@aws-cdk/aws-appsync.InputType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "They are used in arguments to represent",
        "stability": "experimental",
        "summary": "Input Types are abstract types that define complex objects."
      },
      "fqn": "@aws-cdk/aws-appsync.InputType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-intermediate.ts",
          "line": 252
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IntermediateTypeOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IIntermediateType"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 238
      },
      "methods": [
        {
          "docs": {
            "remarks": "Input Types must have both fieldName and field options.",
            "stability": "experimental",
            "summary": "Add a field to this Input Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 291
          },
          "name": "addField",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to add a field."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a GraphQL Type representing this Input Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 262
          },
          "name": "attribute",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this input type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 274
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InputType",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 246
          },
          "name": "definition",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 242
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the authorization modes for this intermediate type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 250
          },
          "name": "modes",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.InterfaceType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Interface Types are abstract types that includes a certain set of fields that other types must include if they implement the interface."
      },
      "fqn": "@aws-cdk/aws-appsync.InterfaceType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-intermediate.ts",
          "line": 56
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IntermediateTypeOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IIntermediateType"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "remarks": "Interface Types must have both fieldName and field options.",
            "stability": "experimental",
            "summary": "Add a field to this Interface Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 99
          },
          "name": "addField",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to add a field."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a GraphQL Type representing this Intermediate Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 67
          },
          "name": "attribute",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this object type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 79
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "InterfaceType",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 44
          },
          "name": "definition",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 40
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- no directives",
            "stability": "experimental",
            "summary": "the directives for this object type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 50
          },
          "name": "directives",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Directive"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the authorization modes for this intermediate type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 54
          },
          "name": "modes",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.IntermediateTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an Intermediate Type."
      },
      "fqn": "@aws-cdk/aws-appsync.IntermediateTypeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 17
      },
      "name": "IntermediateTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 21
          },
          "name": "definition",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no directives",
            "stability": "experimental",
            "summary": "the directives for this object type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 27
          },
          "name": "directives",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Directive"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.KeyCondition": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Factory class for DynamoDB key conditions."
      },
      "fqn": "@aws-cdk/aws-appsync.KeyCondition",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "remarks": "True if the key attribute k begins with the Query argument.",
            "stability": "experimental",
            "summary": "Condition (k, arg)."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 46
          },
          "name": "beginsWith",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k BETWEEN arg1 AND arg2, true if k >= arg1 and k <= arg2."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 53
          },
          "name": "between",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg1",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg2",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k = arg, true if the key attribute k is equal to the Query argument."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 11
          },
          "name": "eq",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k >= arg, true if the key attribute k is greater or equal to the Query argument."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 39
          },
          "name": "ge",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k > arg, true if the key attribute k is greater than the the Query argument."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 32
          },
          "name": "gt",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k <= arg, true if the key attribute k is less than or equal to the Query argument."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 25
          },
          "name": "le",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Condition k < arg, true if the key attribute k is less than the Query argument."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 18
          },
          "name": "lt",
          "parameters": [
            {
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "arg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Conjunction between two conditions."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 62
          },
          "name": "and",
          "parameters": [
            {
              "name": "keyCond",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.KeyCondition"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.KeyCondition"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the key condition to a VTL string."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 69
          },
          "name": "renderTemplate",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "KeyCondition"
    },
    "@aws-cdk/aws-appsync.LambdaDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BackedDataSource",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync datasource backed by a Lambda function."
      },
      "fqn": "@aws-cdk/aws-appsync.LambdaDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 290
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.LambdaDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 289
      },
      "name": "LambdaDataSource"
    },
    "@aws-cdk/aws-appsync.LambdaDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync Lambda datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.LambdaDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BackedDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 279
      },
      "name": "LambdaDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Lambda function to call to interact with this data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 283
          },
          "name": "lambdaFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.LogConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Logging configuration for AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.LogConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 193
      },
      "name": "LogConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "exclude verbose content."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 199
          },
          "name": "excludeVerboseContent",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use AppSync default",
            "stability": "experimental",
            "summary": "log level for fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 205
          },
          "name": "fieldLogLevel",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.FieldLogLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "experimental",
            "summary": "The role for CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 212
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.MappingTemplate": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "MappingTemplates for AppSync resolvers."
      },
      "fqn": "@aws-cdk/aws-appsync.MappingTemplate",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/mapping-template.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to delete a single item from a DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 68
          },
          "name": "dynamoDbDeleteItem",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the hash key field."
              },
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the Mutation argument."
              },
              "name": "idArg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to get a single item from a DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 58
          },
          "name": "dynamoDbGetItem",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the hash key field."
              },
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the Query argument."
              },
              "name": "idArg",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to save a single item to a DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 78
          },
          "name": "dynamoDbPutItem",
          "parameters": [
            {
              "docs": {
                "summary": "the assigment of Mutation values to the primary key."
              },
              "name": "key",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.PrimaryKey"
              }
            },
            {
              "docs": {
                "summary": "the assignment of Mutation values to the table attributes."
              },
              "name": "values",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AttributeValues"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to query a set of items from a DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 48
          },
          "name": "dynamoDbQuery",
          "parameters": [
            {
              "docs": {
                "summary": "the key condition for the query."
              },
              "name": "cond",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.KeyCondition"
              }
            },
            {
              "name": "indexName",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template for a single result item from DynamoDB."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 32
          },
          "name": "dynamoDbResultItem",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template for a result list from DynamoDB."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 25
          },
          "name": "dynamoDbResultList",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to scan a DynamoDB table to fetch all entries."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 39
          },
          "name": "dynamoDbScanTable",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a mapping template from the given file."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 18
          },
          "name": "fromFile",
          "parameters": [
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a mapping template from the given string."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 11
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "template",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to invoke a Lambda function."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 95
          },
          "name": "lambdaRequest",
          "parameters": [
            {
              "docs": {
                "remarks": "If no payload is provided all available context fields are sent to the Lambda function",
                "summary": "the VTL template snippet of the payload to send to the lambda."
              },
              "name": "payload",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Mapping template to return the Lambda result to the caller."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 102
          },
          "name": "lambdaResult",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "this is called to render the mapping template to a VTL string."
          },
          "locationInModule": {
            "filename": "lib/mapping-template.ts",
            "line": 109
          },
          "name": "renderTemplate",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "MappingTemplate"
    },
    "@aws-cdk/aws-appsync.NoneDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BaseDataSource",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync dummy datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.NoneDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 174
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.NoneDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 173
      },
      "name": "NoneDataSource"
    },
    "@aws-cdk/aws-appsync.NoneDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync dummy datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.NoneDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BaseDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 167
      },
      "name": "NoneDataSourceProps"
    },
    "@aws-cdk/aws-appsync.ObjectType": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.InterfaceType",
      "docs": {
        "stability": "experimental",
        "summary": "Object Types are types declared by you."
      },
      "fqn": "@aws-cdk/aws-appsync.ObjectType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-intermediate.ts",
          "line": 153
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectTypeOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IIntermediateType"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "remarks": "Object Types must have both fieldName and field options.",
            "stability": "experimental",
            "summary": "Add a field to this Object Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 193
          },
          "name": "addField",
          "overrides": "@aws-cdk/aws-appsync.InterfaceType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to add a field."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the resolvers linked to this Object Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 220
          },
          "name": "generateResolver",
          "parameters": [
            {
              "name": "api",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
              }
            },
            {
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Resolver"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this object type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 203
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.InterfaceType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "ObjectType",
      "properties": [
        {
          "docs": {
            "default": "- no interface types",
            "stability": "experimental",
            "summary": "The Interface Types this Object Type implements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 147
          },
          "name": "interfaceTypes",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.InterfaceType"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The resolvers linked to this data source."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 151
          },
          "name": "resolvers",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.Resolver"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ObjectTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an Object Type."
      },
      "fqn": "@aws-cdk/aws-appsync.ObjectTypeOptions",
      "interfaces": [
        "@aws-cdk/aws-appsync.IntermediateTypeOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 127
      },
      "name": "ObjectTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no interface types",
            "stability": "experimental",
            "summary": "The Interface Types this Object Type implements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 133
          },
          "name": "interfaceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.InterfaceType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.OpenIdConnectConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration for OpenID Connect authorization in AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.OpenIdConnectConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 127
      },
      "name": "OpenIdConnectConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The issuer returned by discovery must exactly match the value of `iss` in the OIDC token.",
            "stability": "experimental",
            "summary": "The issuer for the OIDC configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 150
          },
          "name": "oidcProvider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- * (All)",
            "example": "- 'ABCD|CDEF' where ABCD and CDEF are two different clientId",
            "remarks": "A regular expression can be specified so AppSync can validate against multiple client identifiers at a time.",
            "stability": "experimental",
            "summary": "The client identifier of the Relying party at the OpenID identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 146
          },
          "name": "clientId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no validation",
            "remarks": "`auth_time` claim in OIDC token is required for this validation to work.",
            "stability": "experimental",
            "summary": "The number of milliseconds an OIDC token is valid after being authenticated by OIDC provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 133
          },
          "name": "tokenExpiryFromAuth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no validation",
            "remarks": "This validation uses `iat` claim of OIDC token.",
            "stability": "experimental",
            "summary": "The number of milliseconds an OIDC token is valid after being issued to a user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 139
          },
          "name": "tokenExpiryFromIssue",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.PartitionKey": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.PrimaryKey",
      "docs": {
        "remarks": "It can be\nenhanced with the assignment of the sort key.",
        "stability": "experimental",
        "summary": "Specifies the assignment to the partition key."
      },
      "fqn": "@aws-cdk/aws-appsync.PartitionKey",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 180
        },
        "parameters": [
          {
            "name": "pkey",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Assign"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 179
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allows assigning a value to the sort key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 187
          },
          "name": "sort",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.SortKeyStep"
            }
          }
        }
      ],
      "name": "PartitionKey"
    },
    "@aws-cdk/aws-appsync.PartitionKeyStep": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Utility class to allow assigning a value or an auto-generated id to a partition key."
      },
      "fqn": "@aws-cdk/aws-appsync.PartitionKeyStep",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 108
        },
        "parameters": [
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 107
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assign an auto-generated value to the partition key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 120
          },
          "name": "auto",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.PartitionKey"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assign an auto-generated value to the partition key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 113
          },
          "name": "is",
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.PartitionKey"
            }
          }
        }
      ],
      "name": "PartitionKeyStep"
    },
    "@aws-cdk/aws-appsync.PrimaryKey": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "It either\ncontains the full primary key or only the partition key.",
        "stability": "experimental",
        "summary": "Specifies the assignment to the primary key."
      },
      "fqn": "@aws-cdk/aws-appsync.PrimaryKey",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 159
        },
        "parameters": [
          {
            "name": "pkey",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Assign"
            }
          },
          {
            "name": "skey",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Assign"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 151
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allows assigning a value to the partition key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 155
          },
          "name": "partition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.PartitionKeyStep"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the key assignment to a VTL string."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 164
          },
          "name": "renderTemplate",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "PrimaryKey",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 159
          },
          "name": "pkey",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.Assign"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.RdsDataSource": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.BackedDataSource",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync datasource backed by RDS."
      },
      "fqn": "@aws-cdk/aws-appsync.RdsDataSource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-source.ts",
          "line": 325
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.RdsDataSourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 324
      },
      "name": "RdsDataSource"
    },
    "@aws-cdk/aws-appsync.RdsDataSourceProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for an AppSync RDS datasource."
      },
      "fqn": "@aws-cdk/aws-appsync.RdsDataSourceProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.BackedDataSourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-source.ts",
        "line": 304
      },
      "name": "RdsDataSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The secret containing the credentials for the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 312
          },
          "name": "secretStore",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The serverless cluster to call to interact with this data source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 308
          },
          "name": "serverlessCluster",
          "type": {
            "fqn": "@aws-cdk/aws-rds.IServerlessCluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "experimental",
            "summary": "The name of the database to use within the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-source.ts",
            "line": 318
          },
          "name": "databaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ResolvableField": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/aws-appsync.Field",
      "docs": {
        "stability": "experimental",
        "summary": "Resolvable Fields build upon Graphql Types and provide fields that can resolve into operations on a data source."
      },
      "fqn": "@aws-cdk/aws-appsync.ResolvableField",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-field.ts",
          "line": 454
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IField"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 446
      },
      "name": "ResolvableField",
      "properties": [
        {
          "docs": {
            "default": "- not a resolvable field",
            "stability": "experimental",
            "summary": "The options to make this field resolvable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 452
          },
          "name": "fieldOptions",
          "optional": true,
          "overrides": "@aws-cdk/aws-appsync.IField",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ResolvableFieldOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "custom": {
          "options": "responseMappingTemplate - the mapping template for responses from this resolver"
        },
        "stability": "experimental",
        "summary": "Properties for configuring a resolvable field."
      },
      "fqn": "@aws-cdk/aws-appsync.ResolvableFieldOptions",
      "interfaces": [
        "@aws-cdk/aws-appsync.FieldOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-field.ts",
        "line": 414
      },
      "name": "ResolvableFieldOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no data source",
            "stability": "experimental",
            "summary": "The data source creating linked to this resolvable field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 420
          },
          "name": "dataSource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.BaseDataSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no pipeline resolver configuration\nAn empty array or undefined prop will set resolver to be of type unit",
            "stability": "experimental",
            "summary": "configuration of the pipeline resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 427
          },
          "name": "pipelineConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IAppsyncFunction"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mapping template",
            "stability": "experimental",
            "summary": "The request mapping template for this resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 433
          },
          "name": "requestMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mapping template",
            "stability": "experimental",
            "summary": "The response mapping template for this resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-field.ts",
            "line": 439
          },
          "name": "responseMappingTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.MappingTemplate"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.Resolver": {
      "assembly": "@aws-cdk/aws-appsync",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "An AppSync resolver."
      },
      "fqn": "@aws-cdk/aws-appsync.Resolver",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/resolver.ts",
          "line": 78
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ResolverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resolver.ts",
        "line": 70
      },
      "name": "Resolver",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the ARN of the resolver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 74
          },
          "name": "arn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.ResolverProps": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Additional property for an AppSync resolver for GraphQL API reference."
      },
      "fqn": "@aws-cdk/aws-appsync.ResolverProps",
      "interfaces": [
        "@aws-cdk/aws-appsync.ExtendedResolverProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resolver.ts",
        "line": 60
      },
      "name": "ResolverProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The API this resolver is attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resolver.ts",
            "line": 64
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-appsync.IGraphqlApi"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.Schema": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "If no options are configured, schema will be generated\ncode-first.",
        "stability": "experimental",
        "summary": "The Schema for a GraphQL Api."
      },
      "fqn": "@aws-cdk/aws-appsync.Schema",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema.ts",
          "line": 61
        },
        "parameters": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-appsync.SchemaOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 33
      },
      "methods": [
        {
          "docs": {
            "returns": "`SchemaAsset` with immutable schema defintion",
            "stability": "experimental",
            "summary": "Generate a Schema from file."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 40
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "the file path of the schema file."
              },
              "name": "filePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Schema"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "type Mutation {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a mutation field to the schema's Mutation. CDK will create an Object Type called 'Mutation'. For example,."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 145
          },
          "name": "addMutation",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the Mutation."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this Mutation."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "remarks": "type Query {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a query field to the schema's Query. CDK will create an Object Type called 'Query'. For example,."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 122
          },
          "name": "addQuery",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the query."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this query."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "remarks": "type Subscription {\n   fieldName: Field.returnType\n}",
            "stability": "experimental",
            "summary": "Add a subscription field to the schema's Subscription. CDK will create an Object Type called 'Subscription'. For example,."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 168
          },
          "name": "addSubscription",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the Subscription."
              },
              "name": "fieldName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the resolvable field to for this Subscription."
              },
              "name": "field",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.ResolvableField"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.ObjectType"
            }
          }
        },
        {
          "docs": {
            "default": "- ''",
            "remarks": "Will always result\nin a newline.",
            "stability": "experimental",
            "summary": "Escape hatch to add to Schema as desired."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 103
          },
          "name": "addToSchema",
          "parameters": [
            {
              "docs": {
                "summary": "the addition to add to schema."
              },
              "name": "addition",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the delimiter between schema and addition."
              },
              "name": "delimiter",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add type to the schema."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 191
          },
          "name": "addType",
          "parameters": [
            {
              "docs": {
                "summary": "the intermediate type to add to the schema."
              },
              "name": "type",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Called when the GraphQL Api is initialized to allow this object to bind to the stack."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 78
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The binding GraphQL Api."
              },
              "name": "api",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.GraphqlApi"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.CfnGraphQLSchema"
            }
          }
        }
      ],
      "name": "Schema",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The definition for this schema."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 47
          },
          "name": "definition",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.SchemaOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "remarks": "If no options are specified, then the schema will\nbe generated code-first.",
        "stability": "experimental",
        "summary": "The options for configuring a schema."
      },
      "fqn": "@aws-cdk/aws-appsync.SchemaOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 16
      },
      "name": "SchemaOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- schema not configured through disk asset",
            "remarks": "When this option is\nconfigured, then the schema will be generated from an\nexisting file from disk.",
            "stability": "experimental",
            "summary": "The file path for the schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 24
          },
          "name": "filePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.SortKeyStep": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Utility class to allow assigning a value or an auto-generated id to a sort key."
      },
      "fqn": "@aws-cdk/aws-appsync.SortKeyStep",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/key.ts",
          "line": 130
        },
        "parameters": [
          {
            "name": "pkey",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.Assign"
            }
          },
          {
            "name": "skey",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 129
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assign an auto-generated value to the sort key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 142
          },
          "name": "auto",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.PrimaryKey"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Assign an auto-generated value to the sort key."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 135
          },
          "name": "is",
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.PrimaryKey"
            }
          }
        }
      ],
      "name": "SortKeyStep"
    },
    "@aws-cdk/aws-appsync.Type": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Enum containing the Types that can be used to define ObjectTypes."
      },
      "fqn": "@aws-cdk/aws-appsync.Type",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/schema-base.ts",
        "line": 313
      },
      "members": [
        {
          "docs": {
            "remarks": "Often used as a key for a cache and not intended to be human-readable.",
            "stability": "experimental",
            "summary": "`ID` scalar type is a unique identifier. `ID` type is serialized similar to `String`."
          },
          "name": "ID"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`String` scalar type is a free-form human-readable text."
          },
          "name": "STRING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Int` scalar type is a signed non-fractional numerical value."
          },
          "name": "INT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Float` scalar type is a signed double-precision fractional value."
          },
          "name": "FLOAT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`Boolean` scalar type is a boolean value: true or false."
          },
          "name": "BOOLEAN"
        },
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `YYYY-MM-DD`. It accepts time zone offsets.",
            "see": "https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates",
            "stability": "experimental",
            "summary": "`AWSDate` scalar type represents a valid extended `ISO 8601 Date` string."
          },
          "name": "AWS_DATE"
        },
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `hh:mm:ss.sss`. It accepts time zone offsets.",
            "see": "https://en.wikipedia.org/wiki/ISO_8601#Times",
            "stability": "experimental",
            "summary": "`AWSTime` scalar type represents a valid extended `ISO 8601 Time` string."
          },
          "name": "AWS_TIME"
        },
        {
          "docs": {
            "remarks": "In other words, accepts date strings in the form of `YYYY-MM-DDThh:mm:ss.sssZ`. It accepts time zone offsets.",
            "see": "https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations",
            "stability": "experimental",
            "summary": "`AWSDateTime` scalar type represents a valid extended `ISO 8601 DateTime` string."
          },
          "name": "AWS_DATE_TIME"
        },
        {
          "docs": {
            "remarks": "Timestamps are serialized and deserialized as numbers.",
            "stability": "experimental",
            "summary": "`AWSTimestamp` scalar type represents the number of seconds since `1970-01-01T00:00Z`."
          },
          "name": "AWS_TIMESTAMP"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSEmail` scalar type represents an email address string (i.e.`username@example.com`)."
          },
          "name": "AWS_EMAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSJson` scalar type represents a JSON string."
          },
          "name": "AWS_JSON"
        },
        {
          "docs": {
            "remarks": "URLs wihtout schemes or contain double slashes are considered invalid.",
            "stability": "experimental",
            "summary": "`AWSURL` scalar type represetns a valid URL string."
          },
          "name": "AWS_URL"
        },
        {
          "docs": {
            "remarks": "The number can specify a country code at the beginning, but is not required for US phone numbers.",
            "stability": "experimental",
            "summary": "`AWSPhone` scalar type represents a valid phone number. Phone numbers maybe be whitespace delimited or hyphenated."
          },
          "name": "AWS_PHONE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`AWSIPAddress` scalar type respresents a valid `IPv4` of `IPv6` address string."
          },
          "name": "AWS_IP_ADDRESS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Type used for Intermediate Types (i.e. an interface or an object type)."
          },
          "name": "INTERMEDIATE"
        }
      ],
      "name": "Type"
    },
    "@aws-cdk/aws-appsync.UnionType": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "remarks": "Note that fields of a union type need to be object types. In other words,\nyou can't create a union type out of interfaces, other unions, or inputs.",
        "stability": "experimental",
        "summary": "Union Types are abstract types that are similar to Interface Types, but they cannot to specify any common fields between types."
      },
      "fqn": "@aws-cdk/aws-appsync.UnionType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/schema-intermediate.ts",
          "line": 344
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-appsync.UnionTypeOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-appsync.IIntermediateType"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 330
      },
      "methods": [
        {
          "docs": {
            "remarks": "Input Types must have field options and the IField must be an Object Type.",
            "stability": "experimental",
            "summary": "Add a field to this Union Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 381
          },
          "name": "addField",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to add a field."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-appsync.AddFieldOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a GraphQL Type representing this Union Type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 355
          },
          "name": "attribute",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "parameters": [
            {
              "docs": {
                "summary": "the options to configure this attribute."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-appsync.BaseTypeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.GraphqlType"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Generate the string of this Union type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 367
          },
          "name": "toString",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "UnionType",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "the attributes of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 338
          },
          "name": "definition",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IField"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the name of this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 334
          },
          "name": "name",
          "overrides": "@aws-cdk/aws-appsync.IIntermediateType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "the authorization modes supported by this intermediate type."
          },
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 342
          },
          "name": "modes",
          "optional": true,
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.AuthorizationType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.UnionTypeOptions": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an Union Type."
      },
      "fqn": "@aws-cdk/aws-appsync.UnionTypeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema-intermediate.ts",
        "line": 314
      },
      "name": "UnionTypeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "the object types for this union type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema-intermediate.ts",
            "line": 318
          },
          "name": "definition",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-appsync.IIntermediateType"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.UserPoolConfig": {
      "assembly": "@aws-cdk/aws-appsync",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration for Cognito user-pools in AppSync."
      },
      "fqn": "@aws-cdk/aws-appsync.UserPoolConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 80
      },
      "name": "UserPoolConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The Cognito user pool to use as identity source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 84
          },
          "name": "userPool",
          "type": {
            "fqn": "@aws-cdk/aws-cognito.IUserPool"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-  None",
            "stability": "experimental",
            "summary": "the optional app id regex."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 90
          },
          "name": "appIdClientRegex",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ALLOW",
            "stability": "experimental",
            "summary": "Default auth action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/graphqlapi.ts",
            "line": 96
          },
          "name": "defaultAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-appsync.UserPoolDefaultAction"
          }
        }
      ]
    },
    "@aws-cdk/aws-appsync.UserPoolDefaultAction": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "enum with all possible values for Cognito user-pool default actions."
      },
      "fqn": "@aws-cdk/aws-appsync.UserPoolDefaultAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/graphqlapi.ts",
        "line": 66
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ALLOW access to API."
          },
          "name": "ALLOW"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "DENY access to API."
          },
          "name": "DENY"
        }
      ],
      "name": "UserPoolDefaultAction"
    },
    "@aws-cdk/aws-appsync.Values": {
      "assembly": "@aws-cdk/aws-appsync",
      "docs": {
        "stability": "experimental",
        "summary": "Factory class for attribute value assignments."
      },
      "fqn": "@aws-cdk/aws-appsync.Values",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/key.ts",
        "line": 239
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Allows assigning a value to the specified attribute."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 253
          },
          "name": "attribute",
          "parameters": [
            {
              "name": "attr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AttributeValuesStep"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "It’s opinionated about how it represents\nsome of the nested objects: e.g., it will use lists (“L”) rather than sets\n(“SS”, “NS”, “BS”). By default it projects the argument container (\"$ctx.args\").",
            "stability": "experimental",
            "summary": "Treats the specified object as a map of assignments, where the property names represent attribute names."
          },
          "locationInModule": {
            "filename": "lib/key.ts",
            "line": 246
          },
          "name": "projecting",
          "parameters": [
            {
              "name": "arg",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-appsync.AttributeValues"
            }
          },
          "static": true
        }
      ],
      "name": "Values"
    }
  },
  "version": "1.93.0",
  "fingerprint": "DBMqW78FXtfMNmxl0m6A3JEbBSug3DGd7mrX/zzdz7I="
}
